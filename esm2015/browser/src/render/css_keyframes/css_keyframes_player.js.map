{"version":3,"file":"css_keyframes_player.js","sourceRoot":"","sources":["../../../../../../../packages/animations/browser/src/render/css_keyframes/css_keyframes_player.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer} from '@angular/animations';\n\nimport {computeStyle} from '../../util';\n\nimport {ElementAnimationStyleHandler} from './element_animation_style_handler';\n\nconst DEFAULT_FILL_MODE = 'forwards';\nconst DEFAULT_EASING = 'linear';\nconst ANIMATION_END_EVENT = 'animationend';\n\nexport enum AnimatorControlState {\n  INITIALIZED = 1,\n  STARTED = 2,\n  FINISHED = 3,\n  DESTROYED = 4\n}\n\nexport class CssKeyframesPlayer implements AnimationPlayer {\n  private _onDoneFns: Function[] = [];\n  private _onStartFns: Function[] = [];\n  private _onDestroyFns: Function[] = [];\n\n  private _started = false;\n  private _styler: ElementAnimationStyleHandler;\n\n  public parentPlayer: AnimationPlayer;\n  public readonly totalTime: number;\n  public readonly easing: string;\n  public currentSnapshot: {[key: string]: string} = {};\n  public state = 0;\n\n  constructor(\n      public readonly element: any, public readonly keyframes: {[key: string]: string | number}[],\n      public readonly animationName: string, private readonly _duration: number,\n      private readonly _delay: number, easing: string,\n      private readonly _finalStyles: {[key: string]: any}) {\n    this.easing = easing || DEFAULT_EASING;\n    this.totalTime = _duration + _delay;\n    this._buildStyler();\n  }\n\n  onStart(fn: () => void): void { this._onStartFns.push(fn); }\n\n  onDone(fn: () => void): void { this._onDoneFns.push(fn); }\n\n  onDestroy(fn: () => void): void { this._onDestroyFns.push(fn); }\n\n  destroy() {\n    this.init();\n    if (this.state >= AnimatorControlState.DESTROYED) return;\n    this.state = AnimatorControlState.DESTROYED;\n    this._styler.destroy();\n    this._flushStartFns();\n    this._flushDoneFns();\n    this._onDestroyFns.forEach(fn => fn());\n    this._onDestroyFns = [];\n  }\n\n  private _flushDoneFns() {\n    this._onDoneFns.forEach(fn => fn());\n    this._onDoneFns = [];\n  }\n\n  private _flushStartFns() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n\n  finish() {\n    this.init();\n    if (this.state >= AnimatorControlState.FINISHED) return;\n    this.state = AnimatorControlState.FINISHED;\n    this._styler.finish();\n    this._flushStartFns();\n    this._flushDoneFns();\n  }\n\n  setPosition(value: number) { this._styler.setPosition(value); }\n\n  getPosition(): number { return this._styler.getPosition(); }\n\n  hasStarted(): boolean { return this.state >= AnimatorControlState.STARTED; }\n  init(): void {\n    if (this.state >= AnimatorControlState.INITIALIZED) return;\n    this.state = AnimatorControlState.INITIALIZED;\n    const elm = this.element;\n    this._styler.apply();\n    if (this._delay) {\n      this._styler.pause();\n    }\n  }\n\n  play(): void {\n    this.init();\n    if (!this.hasStarted()) {\n      this._flushStartFns();\n      this.state = AnimatorControlState.STARTED;\n    }\n    this._styler.resume();\n  }\n\n  pause(): void {\n    this.init();\n    this._styler.pause();\n  }\n  restart(): void {\n    this.reset();\n    this.play();\n  }\n  reset(): void {\n    this._styler.destroy();\n    this._buildStyler();\n    this._styler.apply();\n  }\n\n  private _buildStyler() {\n    this._styler = new ElementAnimationStyleHandler(\n        this.element, this.animationName, this._duration, this._delay, this.easing,\n        DEFAULT_FILL_MODE, () => this.finish());\n  }\n\n  /* @internal */\n  triggerCallback(phaseName: string): void {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n\n  beforeDestroy() {\n    this.init();\n    const styles: {[key: string]: string} = {};\n    if (this.hasStarted()) {\n      const finished = this.state >= AnimatorControlState.FINISHED;\n      Object.keys(this._finalStyles).forEach(prop => {\n        if (prop != 'offset') {\n          styles[prop] = finished ? this._finalStyles[prop] : computeStyle(this.element, prop);\n        }\n      });\n    }\n    this.currentSnapshot = styles;\n  }\n}\n"]}