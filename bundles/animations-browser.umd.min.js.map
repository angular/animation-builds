{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../packages/animations/esm5/browser/src/render/shared.js","../../../packages/animations/esm5/browser/src/render/animation_driver.js","../../../packages/animations/esm5/browser/src/util.js","../../../packages/animations/esm5/browser/src/dsl/animation_transition_expr.js","../../../packages/animations/esm5/browser/src/dsl/animation_ast_builder.js","../../../packages/animations/esm5/browser/src/dsl/animation_timeline_instruction.js","../../../packages/animations/esm5/browser/src/dsl/element_instruction_map.js","../../../packages/animations/esm5/browser/src/dsl/animation_timeline_builder.js","../../../packages/animations/esm5/browser/src/dsl/animation.js","../../../packages/animations/esm5/browser/src/dsl/style_normalization/animation_style_normalizer.js","../../../packages/animations/esm5/browser/src/dsl/style_normalization/web_animations_style_normalizer.js","../../../packages/animations/esm5/browser/src/dsl/animation_transition_instruction.js","../../../packages/animations/esm5/browser/src/dsl/animation_transition_factory.js","../../../packages/animations/esm5/browser/src/dsl/animation_trigger.js","../../../packages/animations/esm5/browser/src/render/timeline_animation_engine.js","../../../packages/animations/esm5/browser/src/render/transition_animation_engine.js","../../../packages/animations/esm5/browser/src/render/animation_engine_next.js","../../../packages/animations/esm5/browser/src/render/css_keyframes/element_animation_style_handler.js","../../../packages/animations/esm5/browser/src/render/css_keyframes/css_keyframes_player.js","../../../packages/animations/esm5/browser/src/render/css_keyframes/direct_style_player.js","../../../packages/animations/esm5/browser/src/render/css_keyframes/css_keyframes_driver.js","../../../packages/animations/esm5/browser/src/render/web_animations/web_animations_player.js","../../../packages/animations/esm5/browser/src/render/web_animations/web_animations_driver.js"],"names":["exports","module","factory","require","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","this","constructor","create","prototype","__assign","assign","t","s","i","n","arguments","length","players","_angular_animations","NoopAnimationPlayer","normalizeKeyframes","driver","normalizer","element","keyframes","preStyles","postStyles","errors","normalizedKeyframes","previousOffset","previousKeyframe","forEach","kf","offset","isSameOffset","normalizedKeyframe","prop","PRE_STYLE","normalizedValue","AUTO_STYLE","normalizedProp","ÉµPRE_STYLE","normalizeStyleValue","push","listenOnPlayer","player","eventName","event","callback","onStart","copyAnimationEvent","onDone","e","phaseName","totalTime","disabled","makeAnimationEvent","triggerName","fromState","toState","undefined","data","map","key","defaultValue","value","Map","get","set","parseTimelineCommand","command","separatorPos","indexOf","substring","substr","_contains","elm1","elm2","_matches","selector","_query","multi","Element","contains","matches","proto","fn_1","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","apply","results","querySelectorAll","elm","querySelector","_IS_WEBKIT","validateStyleProperty","_CACHED_BODY","getBodyNode","style","result","containsVendorPrefix","charAt","toUpperCase","document","body","NoopAnimationDriver","matchesElement","containsElement","Injectable","delay","easing","previousPlayers","scrubberAccessRequested","decorators","type","_angular_core","AnimationDriver","NG_ANIMATING_SELECTOR","resolveTimingValue","unit","ONE_SECOND","exp","allowNegativeValues","duration","match","_convertTimeValueToMS","parseFloat","delayMatch","Math","floor","easingVal","containsErrors","startIndex","normalizeStyles","styles","normalizedStyles","isArray","copyStyles","destination","setStyles","keys","eraseStyles","normalizeAnimationEntry","steps","PARAM_REGEX","RegExp","SUBSTITUTION_EXPR_START","extractStyleParams","params","val","toString","exec","interpolateParams","original","str","replace","_","varName","localVal","iteratorToArray","iterator","arr","item","next","done","DASH_CASE_REGEXP","dashCaseToCamelCase","input","m","_i","balancePreviousStylesIntoKeyframes","previousStyles","previousStyleProps","startingKeyframe_1","missingStyleProps_1","_loop_1","computeStyle","visitor","node","context","visitTrigger","visitState","visitTransition","visitSequence","visitGroup","visitAnimate","visitKeyframes","visitStyle","visitReference","visitAnimateChild","visitAnimateRef","visitQuery","transitionValue","expressions","split","eventStr","alias","parseAnimationAlias","separator","makeLambdaFromStates","parseInnerTransitionStr","lhs","rhs","LHS_MATCH_BOOLEAN","TRUE_BOOLEAN_VALUES","has","FALSE_BOOLEAN_VALUES","RHS_MATCH_BOOLEAN","lhsMatch","ANY_STATE","rhsMatch","buildAnimationAst","metadata","AnimationAstBuilderVisitor","build","_resetContextStyleTimingState","_this","queryCount","depCount","states","transitions","name","definitions","def","stateDef_1","name_1","transition","styleAst","astParams","options","containsDynamicStyles","missingSubs_1","Set","params_1","stylesObj_1","sub","add","size","missingSubsArr","values","join","animation","visitDslNode","matchers","parseTransitionExpr","expr","currentTime","furthestTime","step","innerAst","max","timingAst","timings","resolveTiming","makeTimingAst","strValue","some","v","ast","dynamic","constructTimingAst","currentAnimateTimings","styleMetadata","styleMetadata_1","isEmpty","newStyleData","_styleAst","isEmptyStep","_makeStyleAst","styleTuple","collectedEasing","styleData","styleMap","_validateStyleAst","endTime","startTime","tuple","_driver","collectedStyles","collectedEntry","updateCollectedStyle","totalKeyframesWithOffsets","offsets","offsetsOutOfOrder","keyframesOutOfRange","style$$1","offsetVal","isObject","obj","consumeOffset","generatedOffset","limit","animateDuration","durationUpToThisFrame","parentSelector","currentQuery","_a","hasAmpersand","find","token","SELF_TOKEN","SELF_TOKEN_REGEX","normalizeSelector","includeSelf","currentQuerySelector","visitStagger","currentTransition","normalizeAnimationOptions","copyObj","createTimelineInstruction","preStyleProps","postStyleProps","subTimeline","consume","instructions","_map","delete","ElementInstructionMap","append","existingInstructions","clear","buildAnimationTimelines","rootElement","enterClassName","leaveClassName","startingStyles","finalStyles","subInstructions","AnimationTimelineContext","currentTimeline","timelines","filter","timeline","containsAnimation","tl","allowOnlyTimelineStyles","AnimationTimelineBuilderVisitor","elementInstructions","_visitSubInstructions","innerContext","createSubContext","instruction","instructionTimings","appendInstructionToTimeline","subContextCount","ctx","previousNode","snapshotCurrentStyles","DEFAULT_NOOP_PREVIOUS_NODE","applyStylesToKeyframe","innerTimelines","delayNextStep","_visitTiming","incrementTime","getCurrentStyleProperties","forwardFrame","applyEmptyStep","innerTimeline","mergeTimelineCollectedStyles","elms","invokeQuery","originalSelector","optional","currentQueryTotal","sameElementTimeline","currentQueryIndex","transformIntoNewTimeline","parentContext","abs","maxTime","currentStaggerTime","startingTime","_enterClassName","_leaveClassName","initialTimeline","defineProperty","updateOptions","skipIfExists","newOptions","optionsToUpdate","newParams","paramsToUpdate_1","_copyOptions","oldParams_1","newTime","target","fork","updatedTimings","ENTER_TOKEN_REGEX","LEAVE_TOKEN_REGEX","elements","query","slice","TimelineBuilder","_elementTimelineStylesLookup","_previousKeyframe","_currentKeyframe","_keyframes","_styleSummary","_pendingStyles","_backFill","_currentEmptyStepKeyframe","_localTimelineStyles","_globalTimelineStyles","_loadKeyframe","hasPreStyleStep","forwardTime","_updateStyle","time","allStyles","allProperties","flattenStyles","props","getFinalKeyframe","properties","details0","details1","buildKeyframes","keyframe","finalKeyframe","finalKeyframes","preProps","postProps","kf0","kf1","tslib_1.__extends","_super","SubTimelineBuilder","_stretchStartingKeyframe","call","newKeyframes","startingGap","newFirstKeyframe","timeAtKeyframe","roundOffset","Animation","destinationStyles","start","dest","_animationAst","errorMessage","Error","NoopAnimationStyleNormalizer","normalizePropertyName","WebAnimationsStyleNormalizer","normalizedProperty","strVal","trim","valAndSuffixMatch","userProvidedProperty","createTransitionInstruction","isRemovalTransition","fromStyles","toStyles","queriedElements","AnimationTransitionFactory","matchFns","currentState","nextState","fn","stateName","currentOptions","nextOptions","transitionAnimationParams","EMPTY_OBJECT","currentAnimationParams","currentStateStyles","buildStyles","nextAnimationParams","nextStateStyles","tslib_1.__assign","preStyleMap","postStyleMap","isRemoval","animationOptions","_triggerName","getOrSetAsInMap","AnimationStateStyles","combinedParams","defaultParams","styleObj_1","AnimationTrigger","transitionFactories","balanceProperties","matchTransition","key1","key2","TimelineAnimationEngine","_normalizer","register","id","_animations","autoStylesMap","EMPTY_INSTRUCTION_MAP","inst","optimizeGroupPlayer","_buildPlayer","destroy","_getPlayer","_playersById","args","play","pause","reset","restart","finish","init","setPosition","EMPTY_PLAYER_ARRAY","NULL_REMOVAL_STATE","namespaceId","setForRemoval","hasAnimation","removedBeforeQueried","NULL_REMOVED_QUERIED_STATE","REMOVAL_FLAG","StateValue","isObj","normalizeTriggerValue","absorbOptions","AnimationTransitionNamespace","hostElement","_engine","_triggers","phase","listeners","_elementListeners","triggersWithStates","statesByElement","afterFlush","index","splice","_getTrigger","trigger","defaultToFallback","TransitionAnimationPlayer","addClass","NG_TRIGGER_CLASSNAME","DEFAULT_STATE_VALUE","queued","isFallbackTransition","fallbackTransition","totalQueuedPlayers","_queue","removeClass","playersByElement","index_1","a","k1","k2","fromStyles_1","matchStyles","toStyles_1","reportError","deregister","clearElementCache","elementPlayers","NG_TRIGGER_SELECTOR","namespaces","fetchNamespacesByElement","ns","triggerLeaveAnimation","destroyAfterComplete","players_1","triggerStates","markElementAsRemoved","processLeaveNode","prepareLeaveAnimationListeners","visitedTriggers_1","listener","removeNode","engine","childElementCount","currentPlayers","playersByQueriedElement","parent_1","parentNode","containsPotentialParentTransition","insertNode","parent","_hostClassName","drainQueuedTransitions","microtaskId","entry","destroyed","baseEvent","markedForDestroy","sort","d0","d1","elementContainsData","containsData","TransitionAnimationEngine","newHostElements","disabledNodes","totalAnimations","_namespaceLookup","_namespaceList","_flushFns","_whenQuietFns","onRemovalComplete","createNamespace","_balanceNamespaceList","found","nextNamespace","_fetchNamespace","namespacesByHostElement","elementStates","nsId","isElementNode","insertBefore","details","markElementAsDisabled","_onRemovalComplete","collectedLeaveElements","destroyInnerAnimations","containerElement","destroyActiveAnimationsForElement","finishActiveQueriedAnimationOnElement","whenRenderingDone","Promise","resolve","flush","collectedEnterElements","cleanupFns","_flushAnimations","quietFns_1","subTimelines","skippedPlayers","skippedPlayersMap","queuedInstructions","allPreStyleElements","allPostStyleElements","disabledElementsSet","nodesThatAreDisabled","i_1","allTriggerElements","from","enterNodeMap","buildRootMap","enterNodeMapIds","nodes","root","className","allLeaveNodes","mergedLeaveNodes","leaveNodesWithoutAnimations","i_2","leaveNodeMapIds","leaveNodeMap","allPlayers","erroneousTransitions","i_3","bodyNode","stretchStartingKeyframe","stringMap","setVal_1","setVal","errors_1","error","allPreviousPlayersMap","animationElementMap","_beforeAnimationBuild","_getPreviousPlayers","replaceNodes","replacePostStylesAsPre","postStylesMap","cloakAndComputeStyles","preStylesMap","post","pre","NO_PARENT_ANIMATION_ELEMENT_DETECTED","onDestroy","parentWithAnimation_1","parentsToAdd","detectedParent","innerPlayer","_buildAnimation","setRealPlayer","parentPlayers","parentPlayer","subPlayers","playersForElement","syncPlayerEvents","queriedPlayerResults","queriedInnerElements","j","queriedPlayers","activePlayers","removeNodesAfterAnimationDone","isQueriedElement","toStateValue","queriedElementPlayers","isRemovalAnimation_1","targetNameSpaceId","targetTriggerName","timelineInstruction","this_1","realPlayer","getRealPlayer","beforeDestroy","allQueriedPlayers","allSubElements","allNewPlayers","allConsumedElements","_flattenGroupPlayersRecur","finalPlayers","ÉµAnimationGroupPlayer","pp","wrappedPlayer","currentValues","deleteOrUnsetInMap","animate","_player","_containsRealPlayer","_queuedCallbacks","triggerCallback","_queueEvent","valuesMap","elementPropsMap","defaultStyle","cloakVals","cloakElement","roots","rootMap","localRootMap","getRoot","NULL_NODE","classList","classes","CLASSES_CACHE_KEY","remove","postEntry","preEntry","AnimationEngine","_triggerCache","_transitionEngine","componentId","cacheKey","disableAnimations","property","action","_timelineEngine","eventPhase","configurable","ElementAnimationStyleHandler","_element","_name","_duration","_delay","_easing","_fillMode","_onDoneFn","_finished","_eventFn","_handleCallback","anim","getAnimationStyle","char","count","c","countChars","_startTime","Date","now","playPauseAnimation","setAnimationStyle","_position","timestamp","_ngTestManualTimestamp","elapsedTime","toFixed","addRemoveAnimationEvent","_destroyed","tokens","findMatchingTokenIndex","findIndexForAnimation","searchToken","ANIMATION_PROP","oldValue","DEFAULT_EASING","AnimatorControlState","INITIALIZED","STARTED","FINISHED","DESTROYED","CssKeyframesPlayer","animationName","_finalStyles","_onDoneFns","_onStartFns","_onDestroyFns","_started","currentSnapshot","state","_styler","_flushDoneFns","_flushStartFns","hasStarted","resume","_buildStyler","methods","finished_1","DirectStylePlayer","_styles","__initialized","_startingStyles","removeProperty","CssKeyframesDriver","keyframeStr","tab","object","newObj","_notifyFaultyScrubber","previousCssKeyframePlayers","allowPreviousPlayerStylesMerge","flatKeyframes","kfs","flattenKeyframesIntoStyles","_count","kfElm","buildKeyframeElement","_warningIssued","console","warn","WebAnimationsPlayer","_initialized","_onFinish","_preparePlayerBeforeStart","domPlayer","addEventListener","_resetDomPlayerState","getPosition","_finalKeyframe","WebAnimationsDriver","_isNativeImpl","playerOptions","fill","previousWebAnimationPlayers","getElementAnimateFn"],"mappings":"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","file":"/home/travis/build/angular/angular/dist/packages-dist/animations/bundles/animations-browser.umd.min.js.map","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { AUTO_STYLE, NoopAnimationPlayer, ÉµAnimationGroupPlayer, ÉµPRE_STYLE as PRE_STYLE } from '@angular/animations';\n/**\n * @param {?} players\n * @return {?}\n */\nexport function optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new NoopAnimationPlayer();\n        case 1:\n            return players[0];\n        default:\n            return new ÉµAnimationGroupPlayer(players);\n    }\n}\n/**\n * @param {?} driver\n * @param {?} normalizer\n * @param {?} element\n * @param {?} keyframes\n * @param {?=} preStyles\n * @param {?=} postStyles\n * @return {?}\n */\nexport function normalizeKeyframes(driver, normalizer, element, keyframes, preStyles, postStyles) {\n    if (preStyles === void 0) { preStyles = {}; }\n    if (postStyles === void 0) { postStyles = {}; }\n    var /** @type {?} */ errors = [];\n    var /** @type {?} */ normalizedKeyframes = [];\n    var /** @type {?} */ previousOffset = -1;\n    var /** @type {?} */ previousKeyframe = null;\n    keyframes.forEach(function (kf) {\n        var /** @type {?} */ offset = /** @type {?} */ (kf['offset']);\n        var /** @type {?} */ isSameOffset = offset == previousOffset;\n        var /** @type {?} */ normalizedKeyframe = (isSameOffset && previousKeyframe) || {};\n        Object.keys(kf).forEach(function (prop) {\n            var /** @type {?} */ normalizedProp = prop;\n            var /** @type {?} */ normalizedValue = kf[prop];\n            if (prop !== 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n                switch (normalizedValue) {\n                    case PRE_STYLE:\n                        normalizedValue = preStyles[prop];\n                        break;\n                    case AUTO_STYLE:\n                        normalizedValue = postStyles[prop];\n                        break;\n                    default:\n                        normalizedValue =\n                            normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n                        break;\n                }\n            }\n            normalizedKeyframe[normalizedProp] = normalizedValue;\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        var /** @type {?} */ LINE_START = '\\n - ';\n        throw new Error(\"Unable to animate due to the following errors:\" + LINE_START + errors.join(LINE_START));\n    }\n    return normalizedKeyframes;\n}\n/**\n * @param {?} player\n * @param {?} eventName\n * @param {?} event\n * @param {?} callback\n * @return {?}\n */\nexport function listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(function () { return callback(event && copyAnimationEvent(event, 'start', player)); });\n            break;\n        case 'done':\n            player.onDone(function () { return callback(event && copyAnimationEvent(event, 'done', player)); });\n            break;\n        case 'destroy':\n            player.onDestroy(function () { return callback(event && copyAnimationEvent(event, 'destroy', player)); });\n            break;\n    }\n}\n/**\n * @param {?} e\n * @param {?} phaseName\n * @param {?} player\n * @return {?}\n */\nexport function copyAnimationEvent(e, phaseName, player) {\n    var /** @type {?} */ totalTime = player.totalTime;\n    var /** @type {?} */ disabled = (/** @type {?} */ (player)).disabled ? true : false;\n    var /** @type {?} */ event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime, disabled);\n    var /** @type {?} */ data = (/** @type {?} */ (e))['_data'];\n    if (data != null) {\n        (/** @type {?} */ (event))['_data'] = data;\n    }\n    return event;\n}\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?=} phaseName\n * @param {?=} totalTime\n * @param {?=} disabled\n * @return {?}\n */\nexport function makeAnimationEvent(element, triggerName, fromState, toState, phaseName, totalTime, disabled) {\n    if (phaseName === void 0) { phaseName = ''; }\n    if (totalTime === void 0) { totalTime = 0; }\n    return { element: element, triggerName: triggerName, fromState: fromState, toState: toState, phaseName: phaseName, totalTime: totalTime, disabled: !!disabled };\n}\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} defaultValue\n * @return {?}\n */\nexport function getOrSetAsInMap(map, key, defaultValue) {\n    var /** @type {?} */ value;\n    if (map instanceof Map) {\n        value = map.get(key);\n        if (!value) {\n            map.set(key, value = defaultValue);\n        }\n    }\n    else {\n        value = map[key];\n        if (!value) {\n            value = map[key] = defaultValue;\n        }\n    }\n    return value;\n}\n/**\n * @param {?} command\n * @return {?}\n */\nexport function parseTimelineCommand(command) {\n    var /** @type {?} */ separatorPos = command.indexOf(':');\n    var /** @type {?} */ id = command.substring(1, separatorPos);\n    var /** @type {?} */ action = command.substr(separatorPos + 1);\n    return [id, action];\n}\nvar /** @type {?} */ _contains = function (elm1, elm2) { return false; };\nvar Éµ0 = _contains;\nvar /** @type {?} */ _matches = function (element, selector) {\n    return false;\n};\nvar Éµ1 = _matches;\nvar /** @type {?} */ _query = function (element, selector, multi) {\n    return [];\n};\nvar Éµ2 = _query;\nif (typeof Element != 'undefined') {\n    // this is well supported in all browsers\n    _contains = function (elm1, elm2) { return /** @type {?} */ (elm1.contains(elm2)); };\n    if (Element.prototype.matches) {\n        _matches = function (element, selector) { return element.matches(selector); };\n    }\n    else {\n        var /** @type {?} */ proto = /** @type {?} */ (Element.prototype);\n        var /** @type {?} */ fn_1 = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n            proto.oMatchesSelector || proto.webkitMatchesSelector;\n        if (fn_1) {\n            _matches = function (element, selector) { return fn_1.apply(element, [selector]); };\n        }\n    }\n    _query = function (element, selector, multi) {\n        var /** @type {?} */ results = [];\n        if (multi) {\n            results.push.apply(results, element.querySelectorAll(selector));\n        }\n        else {\n            var /** @type {?} */ elm = element.querySelector(selector);\n            if (elm) {\n                results.push(elm);\n            }\n        }\n        return results;\n    };\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction containsVendorPrefix(prop) {\n    // Webkit is the only real popular vendor prefix nowadays\n    // cc: http://shouldiprefix.com/\n    return prop.substring(1, 6) == 'ebkit'; // webkit or Webkit\n}\nvar /** @type {?} */ _CACHED_BODY = null;\nvar /** @type {?} */ _IS_WEBKIT = false;\n/**\n * @param {?} prop\n * @return {?}\n */\nexport function validateStyleProperty(prop) {\n    if (!_CACHED_BODY) {\n        _CACHED_BODY = getBodyNode() || {};\n        _IS_WEBKIT = /** @type {?} */ ((_CACHED_BODY)).style ? ('WebkitAppearance' in /** @type {?} */ ((_CACHED_BODY)).style) : false;\n    }\n    var /** @type {?} */ result = true;\n    if (/** @type {?} */ ((_CACHED_BODY)).style && !containsVendorPrefix(prop)) {\n        result = prop in /** @type {?} */ ((_CACHED_BODY)).style;\n        if (!result && _IS_WEBKIT) {\n            var /** @type {?} */ camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.substr(1);\n            result = camelProp in /** @type {?} */ ((_CACHED_BODY)).style;\n        }\n    }\n    return result;\n}\n/**\n * @return {?}\n */\nexport function getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\nexport var /** @type {?} */ matchesElement = _matches;\nexport var /** @type {?} */ containsElement = _contains;\nexport var /** @type {?} */ invokeQuery = _query;\nexport { Éµ0, Éµ1, Éµ2 };\n//# sourceMappingURL=shared.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { NoopAnimationPlayer } from '@angular/animations';\nimport { Injectable } from '@angular/core';\nimport { containsElement, invokeQuery, matchesElement, validateStyleProperty } from './shared';\n/**\n * \\@experimental\n */\nvar NoopAnimationDriver = /** @class */ (function () {\n    function NoopAnimationDriver() {\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.validateStyleProperty = /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return validateStyleProperty(prop); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.matchesElement = /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.containsElement = /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.query = /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.computeStyle = /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (element, prop, defaultValue) {\n        return defaultValue || '';\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @param {?=} scrubberAccessRequested\n     * @return {?}\n     */\n    NoopAnimationDriver.prototype.animate = /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @param {?=} scrubberAccessRequested\n     * @return {?}\n     */\n    function (element, keyframes, duration, delay, easing, previousPlayers, scrubberAccessRequested) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        return new NoopAnimationPlayer(duration, delay);\n    };\n    NoopAnimationDriver.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NoopAnimationDriver.ctorParameters = function () { return []; };\n    return NoopAnimationDriver;\n}());\nexport { NoopAnimationDriver };\nfunction NoopAnimationDriver_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NoopAnimationDriver.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NoopAnimationDriver.ctorParameters;\n}\n/**\n * \\@experimental\n * @abstract\n */\nvar AnimationDriver = /** @class */ (function () {\n    function AnimationDriver() {\n    }\n    AnimationDriver.NOOP = new NoopAnimationDriver();\n    return AnimationDriver;\n}());\nexport { AnimationDriver };\nfunction AnimationDriver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationDriver.NOOP;\n    /**\n     * @abstract\n     * @param {?} prop\n     * @return {?}\n     */\n    AnimationDriver.prototype.validateStyleProperty = function (prop) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    AnimationDriver.prototype.matchesElement = function (element, selector) { };\n    /**\n     * @abstract\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    AnimationDriver.prototype.containsElement = function (elm1, elm2) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    AnimationDriver.prototype.query = function (element, selector, multi) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    AnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) { };\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?=} easing\n     * @param {?=} previousPlayers\n     * @param {?=} scrubberAccessRequested\n     * @return {?}\n     */\n    AnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers, scrubberAccessRequested) { };\n}\n//# sourceMappingURL=animation_driver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { sequence } from '@angular/animations';\nexport var /** @type {?} */ ONE_SECOND = 1000;\nexport var /** @type {?} */ SUBSTITUTION_EXPR_START = '{{';\nexport var /** @type {?} */ SUBSTITUTION_EXPR_END = '}}';\nexport var /** @type {?} */ ENTER_CLASSNAME = 'ng-enter';\nexport var /** @type {?} */ LEAVE_CLASSNAME = 'ng-leave';\nexport var /** @type {?} */ ENTER_SELECTOR = '.ng-enter';\nexport var /** @type {?} */ LEAVE_SELECTOR = '.ng-leave';\nexport var /** @type {?} */ NG_TRIGGER_CLASSNAME = 'ng-trigger';\nexport var /** @type {?} */ NG_TRIGGER_SELECTOR = '.ng-trigger';\nexport var /** @type {?} */ NG_ANIMATING_CLASSNAME = 'ng-animating';\nexport var /** @type {?} */ NG_ANIMATING_SELECTOR = '.ng-animating';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    var /** @type {?} */ matches = (/** @type {?} */ (value)).match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\n/**\n * @param {?} value\n * @param {?} unit\n * @return {?}\n */\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND;\n        default:\n            // ms or something else\n            return value;\n    }\n}\n/**\n * @param {?} timings\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nexport function resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration') ? /** @type {?} */ (timings) :\n        parseTimeExpression(/** @type {?} */ (timings), errors, allowNegativeValues);\n}\n/**\n * @param {?} exp\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    var /** @type {?} */ regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n    var /** @type {?} */ duration;\n    var /** @type {?} */ delay = 0;\n    var /** @type {?} */ easing = '';\n    if (typeof exp === 'string') {\n        var /** @type {?} */ matches = exp.match(regex);\n        if (matches === null) {\n            errors.push(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        var /** @type {?} */ delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(Math.floor(parseFloat(delayMatch)), matches[4]);\n        }\n        var /** @type {?} */ easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = /** @type {?} */ (exp);\n    }\n    if (!allowNegativeValues) {\n        var /** @type {?} */ containsErrors = false;\n        var /** @type {?} */ startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(\"Duration values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(\"Delay values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, \"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n        }\n    }\n    return { duration: duration, delay: delay, easing: easing };\n}\n/**\n * @param {?} obj\n * @param {?=} destination\n * @return {?}\n */\nexport function copyObj(obj, destination) {\n    if (destination === void 0) { destination = {}; }\n    Object.keys(obj).forEach(function (prop) { destination[prop] = obj[prop]; });\n    return destination;\n}\n/**\n * @param {?} styles\n * @return {?}\n */\nexport function normalizeStyles(styles) {\n    var /** @type {?} */ normalizedStyles = {};\n    if (Array.isArray(styles)) {\n        styles.forEach(function (data) { return copyStyles(data, false, normalizedStyles); });\n    }\n    else {\n        copyStyles(styles, false, normalizedStyles);\n    }\n    return normalizedStyles;\n}\n/**\n * @param {?} styles\n * @param {?} readPrototype\n * @param {?=} destination\n * @return {?}\n */\nexport function copyStyles(styles, readPrototype, destination) {\n    if (destination === void 0) { destination = {}; }\n    if (readPrototype) {\n        // we make use of a for-in loop so that the\n        // prototypically inherited properties are\n        // revealed from the backFill map\n        for (var /** @type {?} */ prop in styles) {\n            destination[prop] = styles[prop];\n        }\n    }\n    else {\n        copyObj(styles, destination);\n    }\n    return destination;\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nexport function setStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = styles[prop];\n        });\n    }\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nexport function eraseStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = '';\n        });\n    }\n}\n/**\n * @param {?} steps\n * @return {?}\n */\nexport function normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return sequence(steps);\n    }\n    return /** @type {?} */ (steps);\n}\n/**\n * @param {?} value\n * @param {?} options\n * @param {?} errors\n * @return {?}\n */\nexport function validateStyleParams(value, options, errors) {\n    var /** @type {?} */ params = options.params || {};\n    var /** @type {?} */ matches = extractStyleParams(value);\n    if (matches.length) {\n        matches.forEach(function (varName) {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(\"Unable to resolve the local animation param \" + varName + \" in the given list of values\");\n            }\n        });\n    }\n}\nvar /** @type {?} */ PARAM_REGEX = new RegExp(SUBSTITUTION_EXPR_START + \"\\\\s*(.+?)\\\\s*\" + SUBSTITUTION_EXPR_END, 'g');\n/**\n * @param {?} value\n * @return {?}\n */\nexport function extractStyleParams(value) {\n    var /** @type {?} */ params = [];\n    if (typeof value === 'string') {\n        var /** @type {?} */ val = value.toString();\n        var /** @type {?} */ match = void 0;\n        while (match = PARAM_REGEX.exec(val)) {\n            params.push(/** @type {?} */ (match[1]));\n        }\n        PARAM_REGEX.lastIndex = 0;\n    }\n    return params;\n}\n/**\n * @param {?} value\n * @param {?} params\n * @param {?} errors\n * @return {?}\n */\nexport function interpolateParams(value, params, errors) {\n    var /** @type {?} */ original = value.toString();\n    var /** @type {?} */ str = original.replace(PARAM_REGEX, function (_, varName) {\n        var /** @type {?} */ localVal = params[varName];\n        // this means that the value was never overidden by the data passed in by the user\n        if (!params.hasOwnProperty(varName)) {\n            errors.push(\"Please provide a value for the animation param \" + varName);\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\n/**\n * @param {?} iterator\n * @return {?}\n */\nexport function iteratorToArray(iterator) {\n    var /** @type {?} */ arr = [];\n    var /** @type {?} */ item = iterator.next();\n    while (!item.done) {\n        arr.push(item.value);\n        item = iterator.next();\n    }\n    return arr;\n}\n/**\n * @param {?} source\n * @param {?} destination\n * @return {?}\n */\nexport function mergeAnimationOptions(source, destination) {\n    if (source.params) {\n        var /** @type {?} */ p0_1 = source.params;\n        if (!destination.params) {\n            destination.params = {};\n        }\n        var /** @type {?} */ p1_1 = destination.params;\n        Object.keys(p0_1).forEach(function (param) {\n            if (!p1_1.hasOwnProperty(param)) {\n                p1_1[param] = p0_1[param];\n            }\n        });\n    }\n    return destination;\n}\nvar /** @type {?} */ DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} duration\n * @param {?} delay\n * @return {?}\n */\nexport function allowPreviousPlayerStylesMerge(duration, delay) {\n    return duration === 0 || delay === 0;\n}\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} previousStyles\n * @return {?}\n */\nexport function balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles) {\n    var /** @type {?} */ previousStyleProps = Object.keys(previousStyles);\n    if (previousStyleProps.length && keyframes.length) {\n        var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n        var /** @type {?} */ missingStyleProps_1 = [];\n        previousStyleProps.forEach(function (prop) {\n            if (!startingKeyframe_1.hasOwnProperty(prop)) {\n                missingStyleProps_1.push(prop);\n            }\n            startingKeyframe_1[prop] = previousStyles[prop];\n        });\n        if (missingStyleProps_1.length) {\n            var _loop_1 = function () {\n                var /** @type {?} */ kf = keyframes[i];\n                missingStyleProps_1.forEach(function (prop) { kf[prop] = computeStyle(element, prop); });\n            };\n            // tslint:disable-next-line\n            for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                _loop_1();\n            }\n        }\n    }\n    return keyframes;\n}\n/**\n * @param {?} visitor\n * @param {?} node\n * @param {?} context\n * @return {?}\n */\nexport function visitDslNode(visitor, node, context) {\n    switch (node.type) {\n        case 7 /* Trigger */:\n            return visitor.visitTrigger(node, context);\n        case 0 /* State */:\n            return visitor.visitState(node, context);\n        case 1 /* Transition */:\n            return visitor.visitTransition(node, context);\n        case 2 /* Sequence */:\n            return visitor.visitSequence(node, context);\n        case 3 /* Group */:\n            return visitor.visitGroup(node, context);\n        case 4 /* Animate */:\n            return visitor.visitAnimate(node, context);\n        case 5 /* Keyframes */:\n            return visitor.visitKeyframes(node, context);\n        case 6 /* Style */:\n            return visitor.visitStyle(node, context);\n        case 8 /* Reference */:\n            return visitor.visitReference(node, context);\n        case 9 /* AnimateChild */:\n            return visitor.visitAnimateChild(node, context);\n        case 10 /* AnimateRef */:\n            return visitor.visitAnimateRef(node, context);\n        case 11 /* Query */:\n            return visitor.visitQuery(node, context);\n        case 12 /* Stagger */:\n            return visitor.visitStagger(node, context);\n        default:\n            throw new Error(\"Unable to resolve animation metadata node #\" + node.type);\n    }\n}\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nexport function computeStyle(element, prop) {\n    return (/** @type {?} */ (window.getComputedStyle(element)))[prop];\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var /** @type {?} */ ANY_STATE = '*';\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nexport function parseTransitionExpr(transitionValue, errors) {\n    var /** @type {?} */ expressions = [];\n    if (typeof transitionValue == 'string') {\n        (/** @type {?} */ (transitionValue))\n            .split(/\\s*,\\s*/)\n            .forEach(function (str) { return parseInnerTransitionStr(str, expressions, errors); });\n    }\n    else {\n        expressions.push(/** @type {?} */ (transitionValue));\n    }\n    return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        var /** @type {?} */ result = parseAnimationAlias(eventStr, errors);\n        if (typeof result == 'function') {\n            expressions.push(result);\n            return;\n        }\n        eventStr = /** @type {?} */ (result);\n    }\n    var /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(\"The provided transition expression \\\"\" + eventStr + \"\\\" is not supported\");\n        return expressions;\n    }\n    var /** @type {?} */ fromState = match[1];\n    var /** @type {?} */ separator = match[2];\n    var /** @type {?} */ toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    var /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        case ':increment':\n            return function (fromState, toState) { return parseFloat(toState) > parseFloat(fromState); };\n        case ':decrement':\n            return function (fromState, toState) { return parseFloat(toState) < parseFloat(fromState); };\n        default:\n            errors.push(\"The transition alias value \\\"\" + alias + \"\\\" is not supported\");\n            return '* => *';\n    }\n}\n// DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\nvar /** @type {?} */ TRUE_BOOLEAN_VALUES = new Set(['true', '1']);\nvar /** @type {?} */ FALSE_BOOLEAN_VALUES = new Set(['false', '0']);\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs, rhs) {\n    var /** @type {?} */ LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n    var /** @type {?} */ RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n    return function (fromState, toState) {\n        var /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        var /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n        }\n        if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n            rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n//# sourceMappingURL=animation_transition_expr.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { AUTO_STYLE, style } from '@angular/animations';\nimport { getOrSetAsInMap } from '../render/shared';\nimport { NG_ANIMATING_SELECTOR, NG_TRIGGER_SELECTOR, SUBSTITUTION_EXPR_START, copyObj, extractStyleParams, iteratorToArray, normalizeAnimationEntry, resolveTiming, validateStyleParams, visitDslNode } from '../util';\nimport { parseTransitionExpr } from './animation_transition_expr';\nvar /** @type {?} */ SELF_TOKEN = ':self';\nvar /** @type {?} */ SELF_TOKEN_REGEX = new RegExp(\"s*\" + SELF_TOKEN + \"s*,?\", 'g');\n/**\n * @param {?} driver\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nexport function buildAnimationAst(driver, metadata, errors) {\n    return new AnimationAstBuilderVisitor(driver).build(metadata, errors);\n}\nvar /** @type {?} */ ROOT_SELECTOR = '';\nvar AnimationAstBuilderVisitor = /** @class */ (function () {\n    function AnimationAstBuilderVisitor(_driver) {\n        this._driver = _driver;\n    }\n    /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.build = /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    function (metadata, errors) {\n        var /** @type {?} */ context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        return /** @type {?} */ (visitDslNode(this, normalizeAnimationEntry(metadata), context));\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._resetContextStyleTimingState = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles = {};\n        context.collectedStyles[ROOT_SELECTOR] = {};\n        context.currentTime = 0;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTrigger = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ queryCount = context.queryCount = 0;\n        var /** @type {?} */ depCount = context.depCount = 0;\n        var /** @type {?} */ states = [];\n        var /** @type {?} */ transitions = [];\n        if (metadata.name.charAt(0) == '@') {\n            context.errors.push('animation triggers cannot be prefixed with an `@` sign (e.g. trigger(\\'@foo\\', [...]))');\n        }\n        metadata.definitions.forEach(function (def) {\n            _this._resetContextStyleTimingState(context);\n            if (def.type == 0 /* State */) {\n                var /** @type {?} */ stateDef_1 = /** @type {?} */ (def);\n                var /** @type {?} */ name_1 = stateDef_1.name;\n                name_1.split(/\\s*,\\s*/).forEach(function (n) {\n                    stateDef_1.name = n;\n                    states.push(_this.visitState(stateDef_1, context));\n                });\n                stateDef_1.name = name_1;\n            }\n            else if (def.type == 1 /* Transition */) {\n                var /** @type {?} */ transition = _this.visitTransition(/** @type {?} */ (def), context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n            }\n        });\n        return {\n            type: 7 /* Trigger */,\n            name: metadata.name, states: states, transitions: transitions, queryCount: queryCount, depCount: depCount,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitState = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ styleAst = this.visitStyle(metadata.styles, context);\n        var /** @type {?} */ astParams = (metadata.options && metadata.options.params) || null;\n        if (styleAst.containsDynamicStyles) {\n            var /** @type {?} */ missingSubs_1 = new Set();\n            var /** @type {?} */ params_1 = astParams || {};\n            styleAst.styles.forEach(function (value) {\n                if (isObject(value)) {\n                    var /** @type {?} */ stylesObj_1 = /** @type {?} */ (value);\n                    Object.keys(stylesObj_1).forEach(function (prop) {\n                        extractStyleParams(stylesObj_1[prop]).forEach(function (sub) {\n                            if (!params_1.hasOwnProperty(sub)) {\n                                missingSubs_1.add(sub);\n                            }\n                        });\n                    });\n                }\n            });\n            if (missingSubs_1.size) {\n                var /** @type {?} */ missingSubsArr = iteratorToArray(missingSubs_1.values());\n                context.errors.push(\"state(\\\"\" + metadata.name + \"\\\", ...) must define default values for all the following style substitutions: \" + missingSubsArr.join(', '));\n            }\n        }\n        return {\n            type: 0 /* State */,\n            name: metadata.name,\n            style: styleAst,\n            options: astParams ? { params: astParams } : null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTransition = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ matchers = parseTransitionExpr(metadata.expr, context.errors);\n        return {\n            type: 1 /* Transition */,\n            matchers: matchers,\n            animation: animation,\n            queryCount: context.queryCount,\n            depCount: context.depCount,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitSequence = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        return {\n            type: 2 /* Sequence */,\n            steps: metadata.steps.map(function (s) { return visitDslNode(_this, s, context); }),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitGroup = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ furthestTime = 0;\n        var /** @type {?} */ steps = metadata.steps.map(function (step) {\n            context.currentTime = currentTime;\n            var /** @type {?} */ innerAst = visitDslNode(_this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        return {\n            type: 3 /* Group */,\n            steps: steps,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimate = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        var /** @type {?} */ styleAst;\n        var /** @type {?} */ styleMetadata = metadata.styles ? metadata.styles : style({});\n        if (styleMetadata.type == 5 /* Keyframes */) {\n            styleAst = this.visitKeyframes(/** @type {?} */ (styleMetadata), context);\n        }\n        else {\n            var /** @type {?} */ styleMetadata_1 = /** @type {?} */ (metadata.styles);\n            var /** @type {?} */ isEmpty = false;\n            if (!styleMetadata_1) {\n                isEmpty = true;\n                var /** @type {?} */ newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata_1 = style(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            var /** @type {?} */ _styleAst = this.visitStyle(styleMetadata_1, context);\n            _styleAst.isEmptyStep = isEmpty;\n            styleAst = _styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return {\n            type: 4 /* Animate */,\n            timings: timingAst,\n            style: styleAst,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStyle = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._makeStyleAst = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ styles = [];\n        if (Array.isArray(metadata.styles)) {\n            (/** @type {?} */ (metadata.styles)).forEach(function (styleTuple) {\n                if (typeof styleTuple == 'string') {\n                    if (styleTuple == AUTO_STYLE) {\n                        styles.push(/** @type {?} */ (styleTuple));\n                    }\n                    else {\n                        context.errors.push(\"The provided style string value \" + styleTuple + \" is not allowed.\");\n                    }\n                }\n                else {\n                    styles.push(/** @type {?} */ (styleTuple));\n                }\n            });\n        }\n        else {\n            styles.push(metadata.styles);\n        }\n        var /** @type {?} */ containsDynamicStyles = false;\n        var /** @type {?} */ collectedEasing = null;\n        styles.forEach(function (styleData) {\n            if (isObject(styleData)) {\n                var /** @type {?} */ styleMap = /** @type {?} */ (styleData);\n                var /** @type {?} */ easing = styleMap['easing'];\n                if (easing) {\n                    collectedEasing = /** @type {?} */ (easing);\n                    delete styleMap['easing'];\n                }\n                if (!containsDynamicStyles) {\n                    for (var /** @type {?} */ prop in styleMap) {\n                        var /** @type {?} */ value = styleMap[prop];\n                        if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n                            containsDynamicStyles = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            type: 6 /* Style */,\n            styles: styles,\n            easing: collectedEasing,\n            offset: metadata.offset, containsDynamicStyles: containsDynamicStyles,\n            options: null\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._validateStyleAst = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ timings = context.currentAnimateTimings;\n        var /** @type {?} */ endTime = context.currentTime;\n        var /** @type {?} */ startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach(function (tuple) {\n            if (typeof tuple == 'string')\n                return;\n            Object.keys(tuple).forEach(function (prop) {\n                if (!_this._driver.validateStyleProperty(prop)) {\n                    context.errors.push(\"The provided animation property \\\"\" + prop + \"\\\" is not a supported CSS property for animations\");\n                    return;\n                }\n                var /** @type {?} */ collectedStyles = context.collectedStyles[/** @type {?} */ ((context.currentQuerySelector))];\n                var /** @type {?} */ collectedEntry = collectedStyles[prop];\n                var /** @type {?} */ updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime && startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(\"The CSS property \\\"\" + prop + \"\\\" that exists between the times of \\\"\" + collectedEntry.startTime + \"ms\\\" and \\\"\" + collectedEntry.endTime + \"ms\\\" is also being animated in a parallel animation between the times of \\\"\" + startTime + \"ms\\\" and \\\"\" + endTime + \"ms\\\"\");\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles[prop] = { startTime: startTime, endTime: endTime };\n                }\n                if (context.options) {\n                    validateStyleParams(tuple[prop], context.options, context.errors);\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitKeyframes = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ ast = { type: 5 /* Keyframes */, styles: [], options: null };\n        if (!context.currentAnimateTimings) {\n            context.errors.push(\"keyframes() must be placed inside of a call to animate()\");\n            return ast;\n        }\n        var /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n        var /** @type {?} */ totalKeyframesWithOffsets = 0;\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offsetsOutOfOrder = false;\n        var /** @type {?} */ keyframesOutOfRange = false;\n        var /** @type {?} */ previousOffset = 0;\n        var /** @type {?} */ keyframes = metadata.steps.map(function (styles) {\n            var /** @type {?} */ style = _this._makeStyleAst(styles, context);\n            var /** @type {?} */ offsetVal = style.offset != null ? style.offset : consumeOffset(style.styles);\n            var /** @type {?} */ offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(\"Please ensure that all keyframe offsets are between 0 and 1\");\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(\"Please ensure that all keyframe offsets are in order\");\n        }\n        var /** @type {?} */ length = metadata.steps.length;\n        var /** @type {?} */ generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(\"Not all style() steps within the declared keyframes() contain offsets\");\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        var /** @type {?} */ limit = length - 1;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ currentAnimateTimings = /** @type {?} */ ((context.currentAnimateTimings));\n        var /** @type {?} */ animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach(function (kf, i) {\n            var /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n            var /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            _this._validateStyleAst(kf, context);\n            kf.offset = offset;\n            ast.styles.push(kf);\n        });\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitReference = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        return {\n            type: 8 /* Reference */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateChild = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        context.depCount++;\n        return {\n            type: 9 /* AnimateChild */,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateRef = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        return {\n            type: 10 /* AnimateRef */,\n            animation: this.visitReference(metadata.animation, context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitQuery = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        var /** @type {?} */ parentSelector = /** @type {?} */ ((context.currentQuerySelector));\n        var /** @type {?} */ options = /** @type {?} */ ((metadata.options || {}));\n        context.queryCount++;\n        context.currentQuery = metadata;\n        var _a = normalizeSelector(metadata.selector), selector = _a[0], includeSelf = _a[1];\n        context.currentQuerySelector =\n            parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n        getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        return {\n            type: 11 /* Query */,\n            selector: selector,\n            limit: options.limit || 0,\n            optional: !!options.optional, includeSelf: includeSelf, animation: animation,\n            originalSelector: metadata.selector,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStagger = /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    function (metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(\"stagger() can only be used inside of query()\");\n        }\n        var /** @type {?} */ timings = metadata.timings === 'full' ?\n            { duration: 0, delay: 0, easing: 'full' } :\n            resolveTiming(metadata.timings, context.errors, true);\n        return {\n            type: 12 /* Stagger */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context), timings: timings,\n            options: null\n        };\n    };\n    return AnimationAstBuilderVisitor;\n}());\nexport { AnimationAstBuilderVisitor };\nfunction AnimationAstBuilderVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationAstBuilderVisitor.prototype._driver;\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction normalizeSelector(selector) {\n    var /** @type {?} */ hasAmpersand = selector.split(/\\s*,\\s*/).find(function (token) { return token == SELF_TOKEN; }) ? true : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    // the :enter and :leave selectors are filled in at runtime during timeline building\n    selector = selector.replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, function (match) { return NG_TRIGGER_SELECTOR + '-' + match.substr(1); })\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction normalizeParams(obj) {\n    return obj ? copyObj(obj) : null;\n}\nvar AnimationAstBuilderContext = /** @class */ (function () {\n    function AnimationAstBuilderContext(errors) {\n        this.errors = errors;\n        this.queryCount = 0;\n        this.depCount = 0;\n        this.currentTransition = null;\n        this.currentQuery = null;\n        this.currentQuerySelector = null;\n        this.currentAnimateTimings = null;\n        this.currentTime = 0;\n        this.collectedStyles = {};\n        this.options = null;\n    }\n    return AnimationAstBuilderContext;\n}());\nexport { AnimationAstBuilderContext };\nfunction AnimationAstBuilderContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.queryCount;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.depCount;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.currentTransition;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.currentQuery;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.currentQuerySelector;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.currentAnimateTimings;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.currentTime;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.collectedStyles;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.options;\n    /** @type {?} */\n    AnimationAstBuilderContext.prototype.errors;\n}\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    var /** @type {?} */ offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach(function (styleTuple) {\n            if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n                var /** @type {?} */ obj = /** @type {?} */ (styleTuple);\n                offset = parseFloat(/** @type {?} */ (obj['offset']));\n                delete obj['offset'];\n            }\n        });\n    }\n    else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n        var /** @type {?} */ obj = /** @type {?} */ (styles);\n        offset = parseFloat(/** @type {?} */ (obj['offset']));\n        delete obj['offset'];\n    }\n    return offset;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value) {\n    return !Array.isArray(value) && typeof value == 'object';\n}\n/**\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nfunction constructTimingAst(value, errors) {\n    var /** @type {?} */ timings = null;\n    if (value.hasOwnProperty('duration')) {\n        timings = /** @type {?} */ (value);\n    }\n    else if (typeof value == 'number') {\n        var /** @type {?} */ duration = resolveTiming(/** @type {?} */ (value), errors).duration;\n        return makeTimingAst(/** @type {?} */ (duration), 0, '');\n    }\n    var /** @type {?} */ strValue = /** @type {?} */ (value);\n    var /** @type {?} */ isDynamic = strValue.split(/\\s+/).some(function (v) { return v.charAt(0) == '{' && v.charAt(1) == '{'; });\n    if (isDynamic) {\n        var /** @type {?} */ ast = /** @type {?} */ (makeTimingAst(0, 0, ''));\n        ast.dynamic = true;\n        ast.strValue = strValue;\n        return /** @type {?} */ (ast);\n    }\n    timings = timings || resolveTiming(strValue, errors);\n    return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = copyObj(options);\n        if (options['params']) {\n            options['params'] = /** @type {?} */ ((normalizeParams(options['params'])));\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\n/**\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @return {?}\n */\nfunction makeTimingAst(duration, delay, easing) {\n    return { duration: duration, delay: delay, easing: easing };\n}\n//# sourceMappingURL=animation_ast_builder.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nexport function AnimationTimelineInstruction() { }\nfunction AnimationTimelineInstruction_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.element;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.keyframes;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.preStyleProps;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.postStyleProps;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.duration;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.delay;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.totalTime;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.easing;\n    /** @type {?|undefined} */\n    AnimationTimelineInstruction.prototype.stretchStartingKeyframe;\n    /** @type {?} */\n    AnimationTimelineInstruction.prototype.subTimeline;\n}\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} duration\n * @param {?} delay\n * @param {?=} easing\n * @param {?=} subTimeline\n * @return {?}\n */\nexport function createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing, subTimeline) {\n    if (easing === void 0) { easing = null; }\n    if (subTimeline === void 0) { subTimeline = false; }\n    return {\n        type: 1 /* TimelineAnimation */,\n        element: element,\n        keyframes: keyframes,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        duration: duration,\n        delay: delay,\n        totalTime: duration + delay, easing: easing, subTimeline: subTimeline\n    };\n}\n//# sourceMappingURL=animation_timeline_instruction.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ElementInstructionMap = /** @class */ (function () {\n    function ElementInstructionMap() {\n        this._map = new Map();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.consume = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ instructions = this._map.get(element);\n        if (instructions) {\n            this._map.delete(element);\n        }\n        else {\n            instructions = [];\n        }\n        return instructions;\n    };\n    /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.append = /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    function (element, instructions) {\n        var /** @type {?} */ existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, existingInstructions = []);\n        }\n        existingInstructions.push.apply(existingInstructions, instructions);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.has = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return this._map.has(element); };\n    /**\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this._map.clear(); };\n    return ElementInstructionMap;\n}());\nexport { ElementInstructionMap };\nfunction ElementInstructionMap_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementInstructionMap.prototype._map;\n}\n//# sourceMappingURL=element_instruction_map.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as tslib_1 from \"tslib\";\nimport { AUTO_STYLE, ÉµPRE_STYLE as PRE_STYLE } from '@angular/animations';\nimport { copyObj, copyStyles, interpolateParams, iteratorToArray, resolveTiming, resolveTimingValue, visitDslNode } from '../util';\nimport { createTimelineInstruction } from './animation_timeline_instruction';\nimport { ElementInstructionMap } from './element_instruction_map';\nvar /** @type {?} */ ONE_FRAME_IN_MILLISECONDS = 1;\nvar /** @type {?} */ ENTER_TOKEN = ':enter';\nvar /** @type {?} */ ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nvar /** @type {?} */ LEAVE_TOKEN = ':leave';\nvar /** @type {?} */ LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} ast\n * @param {?} enterClassName\n * @param {?} leaveClassName\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @param {?=} options\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nexport function buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors) {\n    if (startingStyles === void 0) { startingStyles = {}; }\n    if (finalStyles === void 0) { finalStyles = {}; }\n    if (errors === void 0) { errors = []; }\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);\n}\nvar AnimationTimelineBuilderVisitor = /** @class */ (function () {\n    function AnimationTimelineBuilderVisitor() {\n    }\n    /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.buildKeyframes = /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    function (driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors) {\n        if (errors === void 0) { errors = []; }\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n        context.options = options;\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        visitDslNode(this, ast, context);\n        // this checks to see if an actual animation happened\n        var /** @type {?} */ timelines = context.timelines.filter(function (timeline) { return timeline.containsAnimation(); });\n        if (timelines.length && Object.keys(finalStyles).length) {\n            var /** @type {?} */ tl = timelines[timelines.length - 1];\n            if (!tl.allowOnlyTimelineStyles()) {\n                tl.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length ? timelines.map(function (timeline) { return timeline.buildKeyframes(); }) :\n            [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTrigger = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitState = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTransition = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateChild = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ elementInstructions = context.subInstructions.consume(context.element);\n        if (elementInstructions) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n            var /** @type {?} */ endTime = this._visitSubInstructions(elementInstructions, innerContext, /** @type {?} */ (innerContext.options));\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateRef = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitSubInstructions = /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    function (instructions, context, options) {\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        var /** @type {?} */ duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        var /** @type {?} */ delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach(function (instruction) {\n                var /** @type {?} */ instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime =\n                    Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        context.updateOptions(ast.options, true);\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitSequence = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ subContextCount = context.subContextCount;\n        var /** @type {?} */ ctx = context;\n        var /** @type {?} */ options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode.type == 6 /* Style */) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                var /** @type {?} */ delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach(function (s) { return visitDslNode(_this, s, ctx); });\n            // this is here just incase the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitGroup = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ innerTimelines = [];\n        var /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach(function (s) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            visitDslNode(_this, s, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach(function (timeline) { return context.currentTimeline.mergeTimelineCollectedStyles(timeline); });\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitTiming = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if ((/** @type {?} */ (ast)).dynamic) {\n            var /** @type {?} */ strValue = (/** @type {?} */ (ast)).strValue;\n            var /** @type {?} */ timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n            return resolveTiming(timingValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        var /** @type {?} */ style = ast.style;\n        if (style.type == 5 /* Keyframes */) {\n            this.visitKeyframes(style, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(/** @type {?} */ (style), context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStyle = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ timeline = context.currentTimeline;\n        var /** @type {?} */ timings = /** @type {?} */ ((context.currentAnimateTimings));\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.getCurrentStyleProperties().length) {\n            timeline.forwardFrame();\n        }\n        var /** @type {?} */ easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitKeyframes = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ currentAnimateTimings = /** @type {?} */ ((context.currentAnimateTimings));\n        var /** @type {?} */ startTime = (/** @type {?} */ ((context.currentTimeline))).duration;\n        var /** @type {?} */ duration = currentAnimateTimings.duration;\n        var /** @type {?} */ innerContext = context.createSubContext();\n        var /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach(function (step) {\n            var /** @type {?} */ offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitQuery = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ options = /** @type {?} */ ((ast.options || {}));\n        var /** @type {?} */ delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay && (context.previousNode.type === 6 /* Style */ ||\n            (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        var /** @type {?} */ furthestTime = startTime;\n        var /** @type {?} */ elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        var /** @type {?} */ sameElementTimeline = null;\n        elms.forEach(function (element, i) {\n            context.currentQueryIndex = i;\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            visitDslNode(_this, ast.animation, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            var /** @type {?} */ endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStagger = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ parentContext = /** @type {?} */ ((context.parentContext));\n        var /** @type {?} */ tl = context.currentTimeline;\n        var /** @type {?} */ timings = ast.timings;\n        var /** @type {?} */ duration = Math.abs(timings.duration);\n        var /** @type {?} */ maxTime = duration * (context.currentQueryTotal - 1);\n        var /** @type {?} */ delay = duration * context.currentQueryIndex;\n        var /** @type {?} */ staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (delay) {\n            timeline.delayNextStep(delay);\n        }\n        var /** @type {?} */ startingTime = timeline.currentTime;\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n    };\n    return AnimationTimelineBuilderVisitor;\n}());\nexport { AnimationTimelineBuilderVisitor };\nvar /** @type {?} */ DEFAULT_NOOP_PREVIOUS_NODE = /** @type {?} */ ({});\nvar AnimationTimelineContext = /** @class */ (function () {\n    function AnimationTimelineContext(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this._enterClassName = _enterClassName;\n        this._leaveClassName = _leaveClassName;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.parentContext = null;\n        this.currentAnimateTimings = null;\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.subContextCount = 0;\n        this.options = {};\n        this.currentQueryIndex = 0;\n        this.currentQueryTotal = 0;\n        this.currentStaggerTime = 0;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    Object.defineProperty(AnimationTimelineContext.prototype, \"params\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.options.params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.updateOptions = /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    function (options, skipIfExists) {\n        var _this = this;\n        if (!options)\n            return;\n        var /** @type {?} */ newOptions = /** @type {?} */ (options);\n        var /** @type {?} */ optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            (/** @type {?} */ (optionsToUpdate)).duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        var /** @type {?} */ newParams = newOptions.params;\n        if (newParams) {\n            var /** @type {?} */ paramsToUpdate_1 = /** @type {?} */ ((optionsToUpdate.params));\n            if (!paramsToUpdate_1) {\n                paramsToUpdate_1 = this.options.params = {};\n            }\n            Object.keys(newParams).forEach(function (name) {\n                if (!skipIfExists || !paramsToUpdate_1.hasOwnProperty(name)) {\n                    paramsToUpdate_1[name] = interpolateParams(newParams[name], paramsToUpdate_1, _this.errors);\n                }\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype._copyOptions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ options = {};\n        if (this.options) {\n            var /** @type {?} */ oldParams_1 = this.options.params;\n            if (oldParams_1) {\n                var /** @type {?} */ params_1 = options['params'] = {};\n                Object.keys(oldParams_1).forEach(function (name) { params_1[name] = oldParams_1[name]; });\n            }\n        }\n        return options;\n    };\n    /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.createSubContext = /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    function (options, element, newTime) {\n        if (options === void 0) { options = null; }\n        var /** @type {?} */ target = element || this.element;\n        var /** @type {?} */ context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    };\n    /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.transformIntoNewTimeline = /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    function (newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.appendInstructionToTimeline = /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    function (instruction, duration, delay) {\n        var /** @type {?} */ updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: ''\n        };\n        var /** @type {?} */ builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.incrementTime = /**\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    };\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.delayNextStep = /**\n     * @param {?} delay\n     * @return {?}\n     */\n    function (delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.invokeQuery = /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    function (selector, originalSelector, limit, includeSelf, optional, errors) {\n        var /** @type {?} */ results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) {\n            // if :self is only used then the selector is empty\n            selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n            selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n            var /** @type {?} */ multi = limit != 1;\n            var /** @type {?} */ elements = this._driver.query(this.element, selector, multi);\n            if (limit !== 0) {\n                elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) :\n                    elements.slice(0, limit);\n            }\n            results.push.apply(results, elements);\n        }\n        if (!optional && results.length == 0) {\n            errors.push(\"`query(\\\"\" + originalSelector + \"\\\")` returned zero elements. (Use `query(\\\"\" + originalSelector + \"\\\", { optional: true })` if you wish to allow this.)\");\n        }\n        return results;\n    };\n    return AnimationTimelineContext;\n}());\nexport { AnimationTimelineContext };\nfunction AnimationTimelineContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationTimelineContext.prototype.parentContext;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.currentTimeline;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.currentAnimateTimings;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.previousNode;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.subContextCount;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.options;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.currentQueryIndex;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.currentQueryTotal;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.currentStaggerTime;\n    /** @type {?} */\n    AnimationTimelineContext.prototype._driver;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.element;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.subInstructions;\n    /** @type {?} */\n    AnimationTimelineContext.prototype._enterClassName;\n    /** @type {?} */\n    AnimationTimelineContext.prototype._leaveClassName;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.errors;\n    /** @type {?} */\n    AnimationTimelineContext.prototype.timelines;\n}\nvar TimelineBuilder = /** @class */ (function () {\n    function TimelineBuilder(_driver, element, startTime, _elementTimelineStylesLookup) {\n        this._driver = _driver;\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        this.duration = 0;\n        this._previousKeyframe = {};\n        this._currentKeyframe = {};\n        this._keyframes = new Map();\n        this._styleSummary = {};\n        this._pendingStyles = {};\n        this._backFill = {};\n        this._currentEmptyStepKeyframe = null;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._localTimelineStyles = Object.create(this._backFill, {});\n        this._globalTimelineStyles = /** @type {?} */ ((this._elementTimelineStylesLookup.get(element)));\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.containsAnimation = /**\n     * @return {?}\n     */\n    function () {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.getCurrentStyleProperties().length > 0;\n            default:\n                return true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getCurrentStyleProperties = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._currentKeyframe); };\n    Object.defineProperty(TimelineBuilder.prototype, \"currentTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.startTime + this.duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    TimelineBuilder.prototype.delayNextStep = /**\n     * @param {?} delay\n     * @return {?}\n     */\n    function (delay) {\n        // in the event that a style() step is placed right before a stagger()\n        // and that style() step is the very first style() value in the animation\n        // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n        // properly applies the style() values to work with the stagger...\n        var /** @type {?} */ hasPreStyleStep = this._keyframes.size == 1 && Object.keys(this._pendingStyles).length;\n        if (this.duration || hasPreStyleStep) {\n            this.forwardTime(this.currentTime + delay);\n            if (hasPreStyleStep) {\n                this.snapshotCurrentStyles();\n            }\n        }\n        else {\n            this.startTime += delay;\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    TimelineBuilder.prototype.fork = /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    function (element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype._loadKeyframe = /**\n     * @return {?}\n     */\n    function () {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = /** @type {?} */ ((this._keyframes.get(this.duration)));\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = Object.create(this._backFill, {});\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardFrame = /**\n     * @return {?}\n     */\n    function () {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardTime = /**\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    TimelineBuilder.prototype._updateStyle = /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    function (prop, value) {\n        this._localTimelineStyles[prop] = value;\n        this._globalTimelineStyles[prop] = value;\n        this._styleSummary[prop] = { time: this.currentTime, value: value };\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.allowOnlyTimelineStyles = /**\n     * @return {?}\n     */\n    function () { return this._currentEmptyStepKeyframe !== this._currentKeyframe; };\n    /**\n     * @param {?} easing\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyEmptyStep = /**\n     * @param {?} easing\n     * @return {?}\n     */\n    function (easing) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        Object.keys(this._globalTimelineStyles).forEach(function (prop) {\n            _this._backFill[prop] = _this._globalTimelineStyles[prop] || AUTO_STYLE;\n            _this._currentKeyframe[prop] = AUTO_STYLE;\n        });\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    };\n    /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineBuilder.prototype.setStyles = /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    function (input, easing, errors, options) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        var /** @type {?} */ params = (options && options.params) || {};\n        var /** @type {?} */ styles = flattenStyles(input, this._globalTimelineStyles);\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ val = interpolateParams(styles[prop], params, errors);\n            _this._pendingStyles[prop] = val;\n            if (!_this._localTimelineStyles.hasOwnProperty(prop)) {\n                _this._backFill[prop] = _this._globalTimelineStyles.hasOwnProperty(prop) ?\n                    _this._globalTimelineStyles[prop] :\n                    AUTO_STYLE;\n            }\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyStylesToKeyframe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ styles = this._pendingStyles;\n        var /** @type {?} */ props = Object.keys(styles);\n        if (props.length == 0)\n            return;\n        this._pendingStyles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ val = styles[prop];\n            _this._currentKeyframe[prop] = val;\n        });\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            if (!_this._currentKeyframe.hasOwnProperty(prop)) {\n                _this._currentKeyframe[prop] = _this._localTimelineStyles[prop];\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.snapshotCurrentStyles = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            var /** @type {?} */ val = _this._localTimelineStyles[prop];\n            _this._pendingStyles[prop] = val;\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getFinalKeyframe = /**\n     * @return {?}\n     */\n    function () { return this._keyframes.get(this.duration); };\n    Object.defineProperty(TimelineBuilder.prototype, \"properties\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ properties = [];\n            for (var /** @type {?} */ prop in this._currentKeyframe) {\n                properties.push(prop);\n            }\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    TimelineBuilder.prototype.mergeTimelineCollectedStyles = /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    function (timeline) {\n        var _this = this;\n        Object.keys(timeline._styleSummary).forEach(function (prop) {\n            var /** @type {?} */ details0 = _this._styleSummary[prop];\n            var /** @type {?} */ details1 = timeline._styleSummary[prop];\n            if (!details0 || details1.time > details0.time) {\n                _this._updateStyle(prop, details1.value);\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.buildKeyframes = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.applyStylesToKeyframe();\n        var /** @type {?} */ preStyleProps = new Set();\n        var /** @type {?} */ postStyleProps = new Set();\n        var /** @type {?} */ isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        var /** @type {?} */ finalKeyframes = [];\n        this._keyframes.forEach(function (keyframe, time) {\n            var /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n            Object.keys(finalKeyframe).forEach(function (prop) {\n                var /** @type {?} */ value = finalKeyframe[prop];\n                if (value == PRE_STYLE) {\n                    preStyleProps.add(prop);\n                }\n                else if (value == AUTO_STYLE) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe['offset'] = time / _this.duration;\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        var /** @type {?} */ preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n        var /** @type {?} */ postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            var /** @type {?} */ kf0 = finalKeyframes[0];\n            var /** @type {?} */ kf1 = copyObj(kf0);\n            kf0['offset'] = 0;\n            kf1['offset'] = 1;\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    };\n    return TimelineBuilder;\n}());\nexport { TimelineBuilder };\nfunction TimelineBuilder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TimelineBuilder.prototype.duration;\n    /** @type {?} */\n    TimelineBuilder.prototype.easing;\n    /** @type {?} */\n    TimelineBuilder.prototype._previousKeyframe;\n    /** @type {?} */\n    TimelineBuilder.prototype._currentKeyframe;\n    /** @type {?} */\n    TimelineBuilder.prototype._keyframes;\n    /** @type {?} */\n    TimelineBuilder.prototype._styleSummary;\n    /** @type {?} */\n    TimelineBuilder.prototype._localTimelineStyles;\n    /** @type {?} */\n    TimelineBuilder.prototype._globalTimelineStyles;\n    /** @type {?} */\n    TimelineBuilder.prototype._pendingStyles;\n    /** @type {?} */\n    TimelineBuilder.prototype._backFill;\n    /** @type {?} */\n    TimelineBuilder.prototype._currentEmptyStepKeyframe;\n    /** @type {?} */\n    TimelineBuilder.prototype._driver;\n    /** @type {?} */\n    TimelineBuilder.prototype.element;\n    /** @type {?} */\n    TimelineBuilder.prototype.startTime;\n    /** @type {?} */\n    TimelineBuilder.prototype._elementTimelineStylesLookup;\n}\nvar SubTimelineBuilder = /** @class */ (function (_super) {\n    tslib_1.__extends(SubTimelineBuilder, _super);\n    function SubTimelineBuilder(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe) {\n        if (_stretchStartingKeyframe === void 0) { _stretchStartingKeyframe = false; }\n        var _this = _super.call(this, driver, element, timings.delay) || this;\n        _this.element = element;\n        _this.keyframes = keyframes;\n        _this.preStyleProps = preStyleProps;\n        _this.postStyleProps = postStyleProps;\n        _this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        _this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.containsAnimation = /**\n     * @return {?}\n     */\n    function () { return this.keyframes.length > 1; };\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.buildKeyframes = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keyframes = this.keyframes;\n        var _a = this.timings, delay = _a.delay, duration = _a.duration, easing = _a.easing;\n        if (this._stretchStartingKeyframe && delay) {\n            var /** @type {?} */ newKeyframes = [];\n            var /** @type {?} */ totalTime = duration + delay;\n            var /** @type {?} */ startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            var /** @type {?} */ newFirstKeyframe = copyStyles(keyframes[0], false);\n            newFirstKeyframe['offset'] = 0;\n            newKeyframes.push(newFirstKeyframe);\n            var /** @type {?} */ oldFirstKeyframe = copyStyles(keyframes[0], false);\n            oldFirstKeyframe['offset'] = roundOffset(startingGap);\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n                    When the keyframe is stretched then it means that the delay before the animation\n                    starts is gone. Instead the first keyframe is placed at the start of the animation\n                    and it is then copied to where it starts when the original delay is over. This basically\n                    means nothing animates during that delay, but the styles are still renderered. For this\n                    to work the original offset values that exist in the original keyframes must be \"warped\"\n                    so that they can take the new keyframe + delay into account.\n            \n                    delay=1000, duration=1000, keyframes = 0 .5 1\n            \n                    turns into\n            \n                    delay=0, duration=2000, keyframes = 0 .33 .66 1\n                   */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            var /** @type {?} */ limit = keyframes.length - 1;\n            for (var /** @type {?} */ i = 1; i <= limit; i++) {\n                var /** @type {?} */ kf = copyStyles(keyframes[i], false);\n                var /** @type {?} */ oldOffset = /** @type {?} */ (kf['offset']);\n                var /** @type {?} */ timeAtKeyframe = delay + oldOffset * duration;\n                kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    };\n    return SubTimelineBuilder;\n}(TimelineBuilder));\nfunction SubTimelineBuilder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SubTimelineBuilder.prototype.timings;\n    /** @type {?} */\n    SubTimelineBuilder.prototype.element;\n    /** @type {?} */\n    SubTimelineBuilder.prototype.keyframes;\n    /** @type {?} */\n    SubTimelineBuilder.prototype.preStyleProps;\n    /** @type {?} */\n    SubTimelineBuilder.prototype.postStyleProps;\n    /** @type {?} */\n    SubTimelineBuilder.prototype._stretchStartingKeyframe;\n}\n/**\n * @param {?} offset\n * @param {?=} decimalPoints\n * @return {?}\n */\nfunction roundOffset(offset, decimalPoints) {\n    if (decimalPoints === void 0) { decimalPoints = 3; }\n    var /** @type {?} */ mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\n/**\n * @param {?} input\n * @param {?} allStyles\n * @return {?}\n */\nfunction flattenStyles(input, allStyles) {\n    var /** @type {?} */ styles = {};\n    var /** @type {?} */ allProperties;\n    input.forEach(function (token) {\n        if (token === '*') {\n            allProperties = allProperties || Object.keys(allStyles);\n            allProperties.forEach(function (prop) { styles[prop] = AUTO_STYLE; });\n        }\n        else {\n            copyStyles(/** @type {?} */ (token), false, styles);\n        }\n    });\n    return styles;\n}\n//# sourceMappingURL=animation_timeline_builder.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { ENTER_CLASSNAME, LEAVE_CLASSNAME, normalizeStyles } from '../util';\nimport { buildAnimationAst } from './animation_ast_builder';\nimport { buildAnimationTimelines } from './animation_timeline_builder';\nimport { ElementInstructionMap } from './element_instruction_map';\nvar Animation = /** @class */ (function () {\n    function Animation(_driver, input) {\n        this._driver = _driver;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(_driver, input, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation validation failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        this._animationAst = ast;\n    }\n    /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    Animation.prototype.buildTimelines = /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    function (element, startingStyles, destinationStyles, options, subInstructions) {\n        var /** @type {?} */ start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : /** @type {?} */ (startingStyles);\n        var /** @type {?} */ dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : /** @type {?} */ (destinationStyles);\n        var /** @type {?} */ errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ result = buildAnimationTimelines(this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        return result;\n    };\n    return Animation;\n}());\nexport { Animation };\nfunction Animation_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Animation.prototype._animationAst;\n    /** @type {?} */\n    Animation.prototype._driver;\n}\n//# sourceMappingURL=animation.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar /**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nAnimationStyleNormalizer = /** @class */ (function () {\n    function AnimationStyleNormalizer() {\n    }\n    return AnimationStyleNormalizer;\n}());\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nexport { AnimationStyleNormalizer };\nfunction AnimationStyleNormalizer_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationStyleNormalizer.prototype.normalizePropertyName = function (propertyName, errors) { };\n    /**\n     * @abstract\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationStyleNormalizer.prototype.normalizeStyleValue = function (userProvidedProperty, normalizedProperty, value, errors) { };\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nvar /**\n * \\@experimental Animation support is experimental.\n */\nNoopAnimationStyleNormalizer = /** @class */ (function () {\n    function NoopAnimationStyleNormalizer() {\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    NoopAnimationStyleNormalizer.prototype.normalizePropertyName = /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    function (propertyName, errors) { return propertyName; };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    NoopAnimationStyleNormalizer.prototype.normalizeStyleValue = /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    function (userProvidedProperty, normalizedProperty, value, errors) {\n        return /** @type {?} */ (value);\n    };\n    return NoopAnimationStyleNormalizer;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nexport { NoopAnimationStyleNormalizer };\n//# sourceMappingURL=animation_style_normalizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as tslib_1 from \"tslib\";\nimport { dashCaseToCamelCase } from '../../util';\nimport { AnimationStyleNormalizer } from './animation_style_normalizer';\nvar WebAnimationsStyleNormalizer = /** @class */ (function (_super) {\n    tslib_1.__extends(WebAnimationsStyleNormalizer, _super);\n    function WebAnimationsStyleNormalizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizePropertyName = /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    function (propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizeStyleValue = /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    function (userProvidedProperty, normalizedProperty, value, errors) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(\"Please provide a CSS unit value for \" + userProvidedProperty + \":\" + value);\n                }\n            }\n        }\n        return strVal + unit;\n    };\n    return WebAnimationsStyleNormalizer;\n}(AnimationStyleNormalizer));\nexport { WebAnimationsStyleNormalizer };\nvar /** @type {?} */ DIMENSIONAL_PROP_MAP = makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n    .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys) {\n    var /** @type {?} */ map = {};\n    keys.forEach(function (key) { return map[key] = true; });\n    return map;\n}\n//# sourceMappingURL=web_animations_style_normalizer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nexport function AnimationTransitionInstruction() { }\nfunction AnimationTransitionInstruction_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.element;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.triggerName;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.isRemovalTransition;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.fromState;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.fromStyles;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.toState;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.toStyles;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.timelines;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.queriedElements;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.preStyleProps;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.postStyleProps;\n    /** @type {?} */\n    AnimationTransitionInstruction.prototype.totalTime;\n    /** @type {?|undefined} */\n    AnimationTransitionInstruction.prototype.errors;\n}\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} isRemovalTransition\n * @param {?} fromStyles\n * @param {?} toStyles\n * @param {?} timelines\n * @param {?} queriedElements\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} totalTime\n * @param {?=} errors\n * @return {?}\n */\nexport function createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, totalTime, errors) {\n    return {\n        type: 0 /* TransitionAnimation */,\n        element: element,\n        triggerName: triggerName,\n        isRemovalTransition: isRemovalTransition,\n        fromState: fromState,\n        fromStyles: fromStyles,\n        toState: toState,\n        toStyles: toStyles,\n        timelines: timelines,\n        queriedElements: queriedElements,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        totalTime: totalTime,\n        errors: errors\n    };\n}\n//# sourceMappingURL=animation_transition_instruction.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as tslib_1 from \"tslib\";\nimport { getOrSetAsInMap } from '../render/shared';\nimport { copyObj, interpolateParams, iteratorToArray } from '../util';\nimport { buildAnimationTimelines } from './animation_timeline_builder';\nimport { createTransitionInstruction } from './animation_transition_instruction';\nvar /** @type {?} */ EMPTY_OBJECT = {};\nvar AnimationTransitionFactory = /** @class */ (function () {\n    function AnimationTransitionFactory(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.match = /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    function (currentState, nextState) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState);\n    };\n    /**\n     * @param {?} stateName\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.buildStyles = /**\n     * @param {?} stateName\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (stateName, params, errors) {\n        var /** @type {?} */ backupStateStyler = this._stateStyles['*'];\n        var /** @type {?} */ stateStyler = this._stateStyles[stateName];\n        var /** @type {?} */ backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n        return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n    };\n    /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?=} currentOptions\n     * @param {?=} nextOptions\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.build = /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @param {?=} currentOptions\n     * @param {?=} nextOptions\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    function (driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n        var /** @type {?} */ nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n        var /** @type {?} */ queriedElements = new Set();\n        var /** @type {?} */ preStyleMap = new Map();\n        var /** @type {?} */ postStyleMap = new Map();\n        var /** @type {?} */ isRemoval = nextState === 'void';\n        var /** @type {?} */ animationOptions = { params: tslib_1.__assign({}, transitionAnimationParams, nextAnimationParams) };\n        var /** @type {?} */ timelines = buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        var /** @type {?} */ totalTime = 0;\n        timelines.forEach(function (tl) { totalTime = Math.max(tl.duration + tl.delay, totalTime); });\n        if (errors.length) {\n            return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);\n        }\n        timelines.forEach(function (tl) {\n            var /** @type {?} */ elm = tl.element;\n            var /** @type {?} */ preProps = getOrSetAsInMap(preStyleMap, elm, {});\n            tl.preStyleProps.forEach(function (prop) { return preProps[prop] = true; });\n            var /** @type {?} */ postProps = getOrSetAsInMap(postStyleMap, elm, {});\n            tl.postStyleProps.forEach(function (prop) { return postProps[prop] = true; });\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        var /** @type {?} */ queriedElementsList = iteratorToArray(queriedElements.values());\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap, totalTime);\n    };\n    return AnimationTransitionFactory;\n}());\nexport { AnimationTransitionFactory };\nfunction AnimationTransitionFactory_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationTransitionFactory.prototype._triggerName;\n    /** @type {?} */\n    AnimationTransitionFactory.prototype.ast;\n    /** @type {?} */\n    AnimationTransitionFactory.prototype._stateStyles;\n}\n/**\n * @param {?} matchFns\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState) {\n    return matchFns.some(function (fn) { return fn(currentState, nextState); });\n}\nvar AnimationStateStyles = /** @class */ (function () {\n    function AnimationStateStyles(styles, defaultParams) {\n        this.styles = styles;\n        this.defaultParams = defaultParams;\n    }\n    /**\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationStateStyles.prototype.buildStyles = /**\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (params, errors) {\n        var /** @type {?} */ finalStyles = {};\n        var /** @type {?} */ combinedParams = copyObj(this.defaultParams);\n        Object.keys(params).forEach(function (key) {\n            var /** @type {?} */ value = params[key];\n            if (value != null) {\n                combinedParams[key] = value;\n            }\n        });\n        this.styles.styles.forEach(function (value) {\n            if (typeof value !== 'string') {\n                var /** @type {?} */ styleObj_1 = /** @type {?} */ (value);\n                Object.keys(styleObj_1).forEach(function (prop) {\n                    var /** @type {?} */ val = styleObj_1[prop];\n                    if (val.length > 1) {\n                        val = interpolateParams(val, combinedParams, errors);\n                    }\n                    finalStyles[prop] = val;\n                });\n            }\n        });\n        return finalStyles;\n    };\n    return AnimationStateStyles;\n}());\nexport { AnimationStateStyles };\nfunction AnimationStateStyles_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationStateStyles.prototype.styles;\n    /** @type {?} */\n    AnimationStateStyles.prototype.defaultParams;\n}\n//# sourceMappingURL=animation_transition_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { AnimationStateStyles, AnimationTransitionFactory } from './animation_transition_factory';\n/**\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nexport function buildTrigger(name, ast) {\n    return new AnimationTrigger(name, ast);\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nvar /**\n * \\@experimental Animation support is experimental.\n */\nAnimationTrigger = /** @class */ (function () {\n    function AnimationTrigger(name, ast) {\n        var _this = this;\n        this.name = name;\n        this.ast = ast;\n        this.transitionFactories = [];\n        this.states = {};\n        ast.states.forEach(function (ast) {\n            var /** @type {?} */ defaultParams = (ast.options && ast.options.params) || {};\n            _this.states[ast.name] = new AnimationStateStyles(ast.style, defaultParams);\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach(function (ast) {\n            _this.transitionFactories.push(new AnimationTransitionFactory(name, ast, _this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states);\n    }\n    Object.defineProperty(AnimationTrigger.prototype, \"containsQueries\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.ast.queryCount > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchTransition = /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    function (currentState, nextState) {\n        var /** @type {?} */ entry = this.transitionFactories.find(function (f) { return f.match(currentState, nextState); });\n        return entry || null;\n    };\n    /**\n     * @param {?} currentState\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchStyles = /**\n     * @param {?} currentState\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    function (currentState, params, errors) {\n        return this.fallbackTransition.buildStyles(currentState, params, errors);\n    };\n    return AnimationTrigger;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nexport { AnimationTrigger };\nfunction AnimationTrigger_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationTrigger.prototype.transitionFactories;\n    /** @type {?} */\n    AnimationTrigger.prototype.fallbackTransition;\n    /** @type {?} */\n    AnimationTrigger.prototype.states;\n    /** @type {?} */\n    AnimationTrigger.prototype.name;\n    /** @type {?} */\n    AnimationTrigger.prototype.ast;\n}\n/**\n * @param {?} triggerName\n * @param {?} states\n * @return {?}\n */\nfunction createFallbackTransition(triggerName, states) {\n    var /** @type {?} */ matchers = [function (fromState, toState) { return true; }];\n    var /** @type {?} */ animation = { type: 2 /* Sequence */, steps: [], options: null };\n    var /** @type {?} */ transition = {\n        type: 1 /* Transition */,\n        animation: animation,\n        matchers: matchers,\n        options: null,\n        queryCount: 0,\n        depCount: 0\n    };\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\n/**\n * @param {?} obj\n * @param {?} key1\n * @param {?} key2\n * @return {?}\n */\nfunction balanceProperties(obj, key1, key2) {\n    if (obj.hasOwnProperty(key1)) {\n        if (!obj.hasOwnProperty(key2)) {\n            obj[key2] = obj[key1];\n        }\n    }\n    else if (obj.hasOwnProperty(key2)) {\n        obj[key1] = obj[key2];\n    }\n}\n//# sourceMappingURL=animation_trigger.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { AUTO_STYLE } from '@angular/animations';\nimport { buildAnimationAst } from '../dsl/animation_ast_builder';\nimport { buildAnimationTimelines } from '../dsl/animation_timeline_builder';\nimport { ElementInstructionMap } from '../dsl/element_instruction_map';\nimport { ENTER_CLASSNAME, LEAVE_CLASSNAME } from '../util';\nimport { getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer } from './shared';\nvar /** @type {?} */ EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nvar TimelineAnimationEngine = /** @class */ (function () {\n    function TimelineAnimationEngine(_driver, _normalizer) {\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._animations = {};\n        this._playersById = {};\n        this.players = [];\n    }\n    /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.register = /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (id, metadata) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(this._driver, metadata, errors);\n        if (errors.length) {\n            throw new Error(\"Unable to build the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        else {\n            this._animations[id] = ast;\n        }\n    };\n    /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._buildPlayer = /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    function (i, preStyles, postStyles) {\n        var /** @type {?} */ element = i.element;\n        var /** @type {?} */ keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.create = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    function (id, element, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = this._animations[id];\n        var /** @type {?} */ instructions;\n        var /** @type {?} */ autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach(function (inst) {\n                var /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n                inst.postStyleProps.forEach(function (prop) { return styles[prop] = null; });\n            });\n        }\n        else {\n            errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n            instructions = [];\n        }\n        if (errors.length) {\n            throw new Error(\"Unable to create the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        autoStylesMap.forEach(function (styles, element) {\n            Object.keys(styles).forEach(function (prop) { styles[prop] = _this._driver.computeStyle(element, prop, AUTO_STYLE); });\n        });\n        var /** @type {?} */ players = instructions.map(function (i) {\n            var /** @type {?} */ styles = autoStylesMap.get(i.element);\n            return _this._buildPlayer(i, {}, styles);\n        });\n        var /** @type {?} */ player = optimizeGroupPlayer(players);\n        this._playersById[id] = player;\n        player.onDestroy(function () { return _this.destroy(id); });\n        this.players.push(player);\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.destroy = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ player = this._getPlayer(id);\n        player.destroy();\n        delete this._playersById[id];\n        var /** @type {?} */ index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._getPlayer = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ player = this._playersById[id];\n        if (!player) {\n            throw new Error(\"Unable to find the timeline player referenced by \" + id);\n        }\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.listen = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        var /** @type {?} */ baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return function () { };\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.command = /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    function (id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, /** @type {?} */ (args[0]));\n            return;\n        }\n        if (command == 'create') {\n            var /** @type {?} */ options = /** @type {?} */ ((args[0] || {}));\n            this.create(id, element, options);\n            return;\n        }\n        var /** @type {?} */ player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(/** @type {?} */ (args[0])));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    };\n    return TimelineAnimationEngine;\n}());\nexport { TimelineAnimationEngine };\nfunction TimelineAnimationEngine_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TimelineAnimationEngine.prototype._animations;\n    /** @type {?} */\n    TimelineAnimationEngine.prototype._playersById;\n    /** @type {?} */\n    TimelineAnimationEngine.prototype.players;\n    /** @type {?} */\n    TimelineAnimationEngine.prototype._driver;\n    /** @type {?} */\n    TimelineAnimationEngine.prototype._normalizer;\n}\n//# sourceMappingURL=timeline_animation_engine.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as tslib_1 from \"tslib\";\nimport { AUTO_STYLE, NoopAnimationPlayer, ÉµAnimationGroupPlayer as AnimationGroupPlayer, ÉµPRE_STYLE as PRE_STYLE } from '@angular/animations';\nimport { ElementInstructionMap } from '../dsl/element_instruction_map';\nimport { ENTER_CLASSNAME, LEAVE_CLASSNAME, NG_ANIMATING_CLASSNAME, NG_ANIMATING_SELECTOR, NG_TRIGGER_CLASSNAME, NG_TRIGGER_SELECTOR, copyObj, eraseStyles, setStyles } from '../util';\nimport { getBodyNode, getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer } from './shared';\nvar /** @type {?} */ QUEUED_CLASSNAME = 'ng-animate-queued';\nvar /** @type {?} */ QUEUED_SELECTOR = '.ng-animate-queued';\nvar /** @type {?} */ DISABLED_CLASSNAME = 'ng-animate-disabled';\nvar /** @type {?} */ DISABLED_SELECTOR = '.ng-animate-disabled';\nvar /** @type {?} */ STAR_CLASSNAME = 'ng-star-inserted';\nvar /** @type {?} */ STAR_SELECTOR = '.ng-star-inserted';\nvar /** @type {?} */ EMPTY_PLAYER_ARRAY = [];\nvar /** @type {?} */ NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: false\n};\nvar /** @type {?} */ NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: true\n};\n/**\n * @record\n */\nfunction TriggerListener() { }\nfunction TriggerListener_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TriggerListener.prototype.name;\n    /** @type {?} */\n    TriggerListener.prototype.phase;\n    /** @type {?} */\n    TriggerListener.prototype.callback;\n}\n/**\n * @record\n */\nexport function QueueInstruction() { }\nfunction QueueInstruction_tsickle_Closure_declarations() {\n    /** @type {?} */\n    QueueInstruction.prototype.element;\n    /** @type {?} */\n    QueueInstruction.prototype.triggerName;\n    /** @type {?} */\n    QueueInstruction.prototype.fromState;\n    /** @type {?} */\n    QueueInstruction.prototype.toState;\n    /** @type {?} */\n    QueueInstruction.prototype.transition;\n    /** @type {?} */\n    QueueInstruction.prototype.player;\n    /** @type {?} */\n    QueueInstruction.prototype.isFallbackTransition;\n}\nexport var /** @type {?} */ REMOVAL_FLAG = '__ng_removed';\n/**\n * @record\n */\nexport function ElementAnimationState() { }\nfunction ElementAnimationState_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementAnimationState.prototype.setForRemoval;\n    /** @type {?} */\n    ElementAnimationState.prototype.hasAnimation;\n    /** @type {?} */\n    ElementAnimationState.prototype.namespaceId;\n    /** @type {?} */\n    ElementAnimationState.prototype.removedBeforeQueried;\n}\nvar StateValue = /** @class */ (function () {\n    function StateValue(input, namespaceId) {\n        if (namespaceId === void 0) { namespaceId = ''; }\n        this.namespaceId = namespaceId;\n        var /** @type {?} */ isObj = input && input.hasOwnProperty('value');\n        var /** @type {?} */ value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            var /** @type {?} */ options = copyObj(/** @type {?} */ (input));\n            delete options['value'];\n            this.options = /** @type {?} */ (options);\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    Object.defineProperty(StateValue.prototype, \"params\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this.options.params); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    StateValue.prototype.absorbOptions = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        var /** @type {?} */ newParams = options.params;\n        if (newParams) {\n            var /** @type {?} */ oldParams_1 = /** @type {?} */ ((this.options.params));\n            Object.keys(newParams).forEach(function (prop) {\n                if (oldParams_1[prop] == null) {\n                    oldParams_1[prop] = newParams[prop];\n                }\n            });\n        }\n    };\n    return StateValue;\n}());\nexport { StateValue };\nfunction StateValue_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StateValue.prototype.value;\n    /** @type {?} */\n    StateValue.prototype.options;\n    /** @type {?} */\n    StateValue.prototype.namespaceId;\n}\nexport var /** @type {?} */ VOID_VALUE = 'void';\nexport var /** @type {?} */ DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nexport var /** @type {?} */ DELETED_STATE_VALUE = new StateValue('DELETED');\nvar AnimationTransitionNamespace = /** @class */ (function () {\n    function AnimationTransitionNamespace(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this.players = [];\n        this._triggers = {};\n        this._queue = [];\n        this._elementListeners = new Map();\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.listen = /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (element, name, phase, callback) {\n        var _this = this;\n        if (!this._triggers.hasOwnProperty(name)) {\n            throw new Error(\"Unable to listen on the animation trigger event \\\"\" + phase + \"\\\" because the animation trigger \\\"\" + name + \"\\\" doesn't exist!\");\n        }\n        if (phase == null || phase.length == 0) {\n            throw new Error(\"Unable to listen on the animation trigger \\\"\" + name + \"\\\" because the provided event is undefined!\");\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw new Error(\"The provided animation trigger event \\\"\" + phase + \"\\\" for the animation trigger \\\"\" + name + \"\\\" is not supported!\");\n        }\n        var /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n        var /** @type {?} */ data = { name: name, phase: phase, callback: callback };\n        listeners.push(data);\n        var /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n        if (!triggersWithStates.hasOwnProperty(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates[name] = DEFAULT_STATE_VALUE;\n        }\n        return function () {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            _this._engine.afterFlush(function () {\n                var /** @type {?} */ index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!_this._triggers[name]) {\n                    delete triggersWithStates[name];\n                }\n            });\n        };\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.register = /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    function (name, ast) {\n        if (this._triggers[name]) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers[name] = ast;\n            return true;\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._getTrigger = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ trigger = this._triggers[name];\n        if (!trigger) {\n            throw new Error(\"The provided animation trigger \\\"\" + name + \"\\\" has not been registered!\");\n        }\n        return trigger;\n    };\n    /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.trigger = /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    function (element, triggerName, value, defaultToFallback) {\n        var _this = this;\n        if (defaultToFallback === void 0) { defaultToFallback = true; }\n        var /** @type {?} */ trigger = this._getTrigger(triggerName);\n        var /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        var /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, triggersWithStates = {});\n        }\n        var /** @type {?} */ fromState = triggersWithStates[triggerName];\n        var /** @type {?} */ toState = new StateValue(value, this.id);\n        var /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates[triggerName] = toState;\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        else if (fromState === DELETED_STATE_VALUE) {\n            return player;\n        }\n        var /** @type {?} */ isRemoval = toState.value === VOID_VALUE;\n        // normally this isn't reached by here, however, if an object expression\n        // is passed in then it may be a new object each time. Comparing the value\n        // is important since that will stay the same despite there being a new object.\n        // The removal arc here is special cased because the same element is triggered\n        // twice in the event that it contains animations on the outer/inner portions\n        // of the host container\n        if (!isRemoval && fromState.value === toState.value) {\n            // this means that despite the value not changing, some inner params\n            // have changed which means that the animation final styles need to be applied\n            if (!objEquals(fromState.params, toState.params)) {\n                var /** @type {?} */ errors = [];\n                var /** @type {?} */ fromStyles_1 = trigger.matchStyles(fromState.value, fromState.params, errors);\n                var /** @type {?} */ toStyles_1 = trigger.matchStyles(toState.value, toState.params, errors);\n                if (errors.length) {\n                    this._engine.reportError(errors);\n                }\n                else {\n                    this._engine.afterFlush(function () {\n                        eraseStyles(element, fromStyles_1);\n                        setStyles(element, toStyles_1);\n                    });\n                }\n            }\n            return;\n        }\n        var /** @type {?} */ playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n        playersOnElement.forEach(function (player) {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new palyer)\n            if (player.namespaceId == _this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        var /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n        var /** @type {?} */ isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({ element: element, triggerName: triggerName, transition: transition, fromState: fromState, toState: toState, player: player, isFallbackTransition: isFallbackTransition });\n        if (!isFallbackTransition) {\n            addClass(element, QUEUED_CLASSNAME);\n            player.onStart(function () { removeClass(element, QUEUED_CLASSNAME); });\n        }\n        player.onDone(function () {\n            var /** @type {?} */ index = _this.players.indexOf(player);\n            if (index >= 0) {\n                _this.players.splice(index, 1);\n            }\n            var /** @type {?} */ players = _this._engine.playersByElement.get(element);\n            if (players) {\n                var /** @type {?} */ index_1 = players.indexOf(player);\n                if (index_1 >= 0) {\n                    players.splice(index_1, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.deregister = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var _this = this;\n        delete this._triggers[name];\n        this._engine.statesByElement.forEach(function (stateMap, element) { delete stateMap[name]; });\n        this._elementListeners.forEach(function (listeners, element) {\n            _this._elementListeners.set(element, listeners.filter(function (entry) { return entry.name != name; }));\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.clearElementCache = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        var /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach(function (player) { return player.destroy(); });\n            this._engine.playersByElement.delete(element);\n        }\n    };\n    /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._signalRemovalForInnerTriggers = /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    function (rootElement, context, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        // emulate a leave animation for all inner nodes within this node.\n        // If there are no animations found for any of the nodes then clear the cache\n        // for the element.\n        this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true).forEach(function (elm) {\n            // this means that an inner remove() operation has already kicked off\n            // the animation on this element...\n            if (elm[REMOVAL_FLAG])\n                return;\n            var /** @type {?} */ namespaces = _this._engine.fetchNamespacesByElement(elm);\n            if (namespaces.size) {\n                namespaces.forEach(function (ns) { return ns.triggerLeaveAnimation(elm, context, false, true); });\n            }\n            else {\n                _this.clearElementCache(elm);\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} destroyAfterComplete\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.triggerLeaveAnimation = /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} destroyAfterComplete\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    function (element, context, destroyAfterComplete, defaultToFallback) {\n        var _this = this;\n        var /** @type {?} */ triggerStates = this._engine.statesByElement.get(element);\n        if (triggerStates) {\n            var /** @type {?} */ players_1 = [];\n            Object.keys(triggerStates).forEach(function (triggerName) {\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (_this._triggers[triggerName]) {\n                    var /** @type {?} */ player = _this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n                    if (player) {\n                        players_1.push(player);\n                    }\n                }\n            });\n            if (players_1.length) {\n                this._engine.markElementAsRemoved(this.id, element, true, context);\n                if (destroyAfterComplete) {\n                    optimizeGroupPlayer(players_1).onDone(function () { return _this._engine.processLeaveNode(element); });\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.prepareLeaveAnimationListeners = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        var /** @type {?} */ listeners = this._elementListeners.get(element);\n        if (listeners) {\n            var /** @type {?} */ visitedTriggers_1 = new Set();\n            listeners.forEach(function (listener) {\n                var /** @type {?} */ triggerName = listener.name;\n                if (visitedTriggers_1.has(triggerName))\n                    return;\n                visitedTriggers_1.add(triggerName);\n                var /** @type {?} */ trigger = _this._triggers[triggerName];\n                var /** @type {?} */ transition = trigger.fallbackTransition;\n                var /** @type {?} */ elementStates = /** @type {?} */ ((_this._engine.statesByElement.get(element)));\n                var /** @type {?} */ fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n                var /** @type {?} */ toState = new StateValue(VOID_VALUE);\n                var /** @type {?} */ player = new TransitionAnimationPlayer(_this.id, triggerName, element);\n                _this._engine.totalQueuedPlayers++;\n                _this._queue.push({\n                    element: element,\n                    triggerName: triggerName,\n                    transition: transition,\n                    fromState: fromState,\n                    toState: toState,\n                    player: player,\n                    isFallbackTransition: true\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.removeNode = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        var _this = this;\n        var /** @type {?} */ engine = this._engine;\n        if (element.childElementCount) {\n            this._signalRemovalForInnerTriggers(element, context, true);\n        }\n        // this means that a * => VOID animation was detected and kicked off\n        if (this.triggerLeaveAnimation(element, context, true))\n            return;\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        var /** @type {?} */ containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            var /** @type {?} */ currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue fowards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                var /** @type {?} */ parent_1 = element;\n                while (parent_1 = parent_1.parentNode) {\n                    var /** @type {?} */ triggers = engine.statesByElement.get(parent_1);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        this.prepareLeaveAnimationListeners(element);\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            // we do this after the flush has occurred such\n            // that the callbacks can be fired\n            engine.afterFlush(function () { return _this.clearElementCache(element); });\n            engine.destroyInnerAnimations(element);\n            engine._onRemovalComplete(element, context);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.insertNode = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) { addClass(element, this._hostClassName); };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.drainQueuedTransitions = /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ instructions = [];\n        this._queue.forEach(function (entry) {\n            var /** @type {?} */ player = entry.player;\n            if (player.destroyed)\n                return;\n            var /** @type {?} */ element = entry.element;\n            var /** @type {?} */ listeners = _this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach(function (listener) {\n                    if (listener.name == entry.triggerName) {\n                        var /** @type {?} */ baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        (/** @type {?} */ (baseEvent))['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                _this._engine.afterFlush(function () {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort(function (a, b) {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            var /** @type {?} */ d0 = a.transition.ast.depCount;\n            var /** @type {?} */ d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return _this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.destroy = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        this.players.forEach(function (p) { return p.destroy(); });\n        this._signalRemovalForInnerTriggers(this.hostElement, context);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.elementContainsData = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ containsData = false;\n        if (this._elementListeners.has(element))\n            containsData = true;\n        containsData =\n            (this._queue.find(function (entry) { return entry.element === element; }) ? true : false) || containsData;\n        return containsData;\n    };\n    return AnimationTransitionNamespace;\n}());\nexport { AnimationTransitionNamespace };\nfunction AnimationTransitionNamespace_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype.players;\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype._triggers;\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype._queue;\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype._elementListeners;\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype._hostClassName;\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype.id;\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype.hostElement;\n    /** @type {?} */\n    AnimationTransitionNamespace.prototype._engine;\n}\n/**\n * @record\n */\nexport function QueuedTransition() { }\nfunction QueuedTransition_tsickle_Closure_declarations() {\n    /** @type {?} */\n    QueuedTransition.prototype.element;\n    /** @type {?} */\n    QueuedTransition.prototype.instruction;\n    /** @type {?} */\n    QueuedTransition.prototype.player;\n}\nvar TransitionAnimationEngine = /** @class */ (function () {\n    function TransitionAnimationEngine(driver, _normalizer) {\n        this.driver = driver;\n        this._normalizer = _normalizer;\n        this.players = [];\n        this.newHostElements = new Map();\n        this.playersByElement = new Map();\n        this.playersByQueriedElement = new Map();\n        this.statesByElement = new Map();\n        this.disabledNodes = new Set();\n        this.totalAnimations = 0;\n        this.totalQueuedPlayers = 0;\n        this._namespaceLookup = {};\n        this._namespaceList = [];\n        this._flushFns = [];\n        this._whenQuietFns = [];\n        this.namespacesByHostElement = new Map();\n        this.collectedEnterElements = [];\n        this.collectedLeaveElements = [];\n        this.onRemovalComplete = function (element, context) { };\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._onRemovalComplete = /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) { this.onRemovalComplete(element, context); };\n    Object.defineProperty(TransitionAnimationEngine.prototype, \"queuedPlayers\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ players = [];\n            this._namespaceList.forEach(function (ns) {\n                ns.players.forEach(function (player) {\n                    if (player.queued) {\n                        players.push(player);\n                    }\n                });\n            });\n            return players;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.createNamespace = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (hostElement.parentNode) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is apart of the animation code, it\n            // may or may not be inserted by a parent node that is an of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return this._namespaceLookup[namespaceId] = ns;\n    };\n    /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._balanceNamespaceList = /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (ns, hostElement) {\n        var /** @type {?} */ limit = this._namespaceList.length - 1;\n        if (limit >= 0) {\n            var /** @type {?} */ found = false;\n            for (var /** @type {?} */ i = limit; i >= 0; i--) {\n                var /** @type {?} */ nextNamespace = this._namespaceList[i];\n                if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n                    this._namespaceList.splice(i + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this._namespaceList.splice(0, 0, ns);\n            }\n        }\n        else {\n            this._namespaceList.push(ns);\n        }\n        this.namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.register = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.registerTrigger = /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    function (namespaceId, name, trigger) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroy = /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, context) {\n        var _this = this;\n        if (!namespaceId)\n            return;\n        var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n        this.afterFlush(function () {\n            _this.namespacesByHostElement.delete(ns.hostElement);\n            delete _this._namespaceLookup[namespaceId];\n            var /** @type {?} */ index = _this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                _this._namespaceList.splice(index, 1);\n            }\n        });\n        this.afterFlushAnimationsDone(function () { return ns.destroy(context); });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._fetchNamespace = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) { return this._namespaceLookup[id]; };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.fetchNamespacesByElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // normally there should only be one namespace per element, however\n        // if @triggers are placed on both the component element and then\n        // its host element (within the component code) then there will be\n        // two namespaces returned. We use a set here to simply the dedupe\n        // of namespaces incase there are multiple triggers both the elm and host\n        var /** @type {?} */ namespaces = new Set();\n        var /** @type {?} */ elementStates = this.statesByElement.get(element);\n        if (elementStates) {\n            var /** @type {?} */ keys = Object.keys(elementStates);\n            for (var /** @type {?} */ i = 0; i < keys.length; i++) {\n                var /** @type {?} */ nsId = elementStates[keys[i]].namespaceId;\n                if (nsId) {\n                    var /** @type {?} */ ns = this._fetchNamespace(nsId);\n                    if (ns) {\n                        namespaces.add(ns);\n                    }\n                }\n            }\n        }\n        return namespaces;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.trigger = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            this._fetchNamespace(namespaceId).trigger(element, name, value);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.insertNode = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    function (namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            this._fetchNamespace(namespaceId).insertNode(element, parent);\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.collectEnterElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { this.collectedEnterElements.push(element); };\n    /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsDisabled = /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, value) {\n        if (value) {\n            if (!this.disabledNodes.has(element)) {\n                this.disabledNodes.add(element);\n                addClass(element, DISABLED_CLASSNAME);\n            }\n        }\n        else if (this.disabledNodes.has(element)) {\n            this.disabledNodes.delete(element);\n            removeClass(element, DISABLED_CLASSNAME);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.removeNode = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, element, context) {\n        if (!isElementNode(element)) {\n            this._onRemovalComplete(element, context);\n            return;\n        }\n        var /** @type {?} */ ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n        if (ns) {\n            ns.removeNode(element, context);\n        }\n        else {\n            this.markElementAsRemoved(namespaceId, element, false, context);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsRemoved = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    function (namespaceId, element, hasAnimation, context) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] = {\n            namespaceId: namespaceId,\n            setForRemoval: context, hasAnimation: hasAnimation,\n            removedBeforeQueried: false\n        };\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.listen = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return function () { };\n    };\n    /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildInstruction = /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @param {?} enterClassName\n     * @param {?} leaveClassName\n     * @return {?}\n     */\n    function (entry, subTimelines, enterClassName, leaveClassName) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines);\n    };\n    /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyInnerAnimations = /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    function (containerElement) {\n        var _this = this;\n        var /** @type {?} */ elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n        elements.forEach(function (element) { return _this.destroyActiveAnimationsForElement(element); });\n        if (this.playersByQueriedElement.size == 0)\n            return;\n        elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n        elements.forEach(function (element) { return _this.finishActiveQueriedAnimationOnElement(element); });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyActiveAnimationsForElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ players = this.playersByElement.get(element);\n        if (players) {\n            players.forEach(function (player) {\n                // special case for when an element is set for destruction, but hasn't started.\n                // in this situation we want to delay the destruction until the flush occurs\n                // so that any event listeners attached to the player are triggered.\n                if (player.queued) {\n                    player.markedForDestroy = true;\n                }\n                else {\n                    player.destroy();\n                }\n            });\n        }\n        var /** @type {?} */ stateMap = this.statesByElement.get(element);\n        if (stateMap) {\n            Object.keys(stateMap).forEach(function (triggerName) { return stateMap[triggerName] = DELETED_STATE_VALUE; });\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.finishActiveQueriedAnimationOnElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ players = this.playersByQueriedElement.get(element);\n        if (players) {\n            players.forEach(function (player) { return player.finish(); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.players.length) {\n                return optimizeGroupPlayer(_this.players).onDone(function () { return resolve(); });\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.processLeaveNode = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                var /** @type {?} */ ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n        if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n            this.markElementAsDisabled(element, false);\n        }\n        this.driver.query(element, DISABLED_SELECTOR, true).forEach(function (node) {\n            _this.markElementAsDisabled(element, false);\n        });\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.flush = /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        var _this = this;\n        if (microtaskId === void 0) { microtaskId = -1; }\n        var /** @type {?} */ players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach(function (ns, element) { return _this._balanceNamespaceList(ns, element); });\n            this.newHostElements.clear();\n        }\n        if (this.totalAnimations && this.collectedEnterElements.length) {\n            for (var /** @type {?} */ i = 0; i < this.collectedEnterElements.length; i++) {\n                var /** @type {?} */ elm = this.collectedEnterElements[i];\n                addClass(elm, STAR_CLASSNAME);\n            }\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            var /** @type {?} */ cleanupFns = [];\n            try {\n                players = this._flushAnimations(cleanupFns, microtaskId);\n            }\n            finally {\n                for (var /** @type {?} */ i = 0; i < cleanupFns.length; i++) {\n                    cleanupFns[i]();\n                }\n            }\n        }\n        else {\n            for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n                var /** @type {?} */ element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach(function (fn) { return fn(); });\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            var /** @type {?} */ quietFns_1 = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(function () { quietFns_1.forEach(function (fn) { return fn(); }); });\n            }\n            else {\n                quietFns_1.forEach(function (fn) { return fn(); });\n            }\n        }\n    };\n    /**\n     * @param {?} errors\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.reportError = /**\n     * @param {?} errors\n     * @return {?}\n     */\n    function (errors) {\n        throw new Error(\"Unable to process animations due to the following failed trigger transitions\\n \" + errors.join('\\n'));\n    };\n    /**\n     * @param {?} cleanupFns\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._flushAnimations = /**\n     * @param {?} cleanupFns\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    function (cleanupFns, microtaskId) {\n        var _this = this;\n        var /** @type {?} */ subTimelines = new ElementInstructionMap();\n        var /** @type {?} */ skippedPlayers = [];\n        var /** @type {?} */ skippedPlayersMap = new Map();\n        var /** @type {?} */ queuedInstructions = [];\n        var /** @type {?} */ queriedElements = new Map();\n        var /** @type {?} */ allPreStyleElements = new Map();\n        var /** @type {?} */ allPostStyleElements = new Map();\n        var /** @type {?} */ disabledElementsSet = new Set();\n        this.disabledNodes.forEach(function (node) {\n            disabledElementsSet.add(node);\n            var /** @type {?} */ nodesThatAreDisabled = _this.driver.query(node, QUEUED_SELECTOR, true);\n            for (var /** @type {?} */ i_1 = 0; i_1 < nodesThatAreDisabled.length; i_1++) {\n                disabledElementsSet.add(nodesThatAreDisabled[i_1]);\n            }\n        });\n        var /** @type {?} */ bodyNode = getBodyNode();\n        var /** @type {?} */ allTriggerElements = Array.from(this.statesByElement.keys());\n        var /** @type {?} */ enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        var /** @type {?} */ enterNodeMapIds = new Map();\n        var /** @type {?} */ i = 0;\n        enterNodeMap.forEach(function (nodes, root) {\n            var /** @type {?} */ className = ENTER_CLASSNAME + i++;\n            enterNodeMapIds.set(root, className);\n            nodes.forEach(function (node) { return addClass(node, className); });\n        });\n        var /** @type {?} */ allLeaveNodes = [];\n        var /** @type {?} */ mergedLeaveNodes = new Set();\n        var /** @type {?} */ leaveNodesWithoutAnimations = new Set();\n        for (var /** @type {?} */ i_2 = 0; i_2 < this.collectedLeaveElements.length; i_2++) {\n            var /** @type {?} */ element = this.collectedLeaveElements[i_2];\n            var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n            if (details && details.setForRemoval) {\n                allLeaveNodes.push(element);\n                mergedLeaveNodes.add(element);\n                if (details.hasAnimation) {\n                    this.driver.query(element, STAR_SELECTOR, true).forEach(function (elm) { return mergedLeaveNodes.add(elm); });\n                }\n                else {\n                    leaveNodesWithoutAnimations.add(element);\n                }\n            }\n        }\n        var /** @type {?} */ leaveNodeMapIds = new Map();\n        var /** @type {?} */ leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n        leaveNodeMap.forEach(function (nodes, root) {\n            var /** @type {?} */ className = LEAVE_CLASSNAME + i++;\n            leaveNodeMapIds.set(root, className);\n            nodes.forEach(function (node) { return addClass(node, className); });\n        });\n        cleanupFns.push(function () {\n            enterNodeMap.forEach(function (nodes, root) {\n                var /** @type {?} */ className = /** @type {?} */ ((enterNodeMapIds.get(root)));\n                nodes.forEach(function (node) { return removeClass(node, className); });\n            });\n            leaveNodeMap.forEach(function (nodes, root) {\n                var /** @type {?} */ className = /** @type {?} */ ((leaveNodeMapIds.get(root)));\n                nodes.forEach(function (node) { return removeClass(node, className); });\n            });\n            allLeaveNodes.forEach(function (element) { _this.processLeaveNode(element); });\n        });\n        var /** @type {?} */ allPlayers = [];\n        var /** @type {?} */ erroneousTransitions = [];\n        for (var /** @type {?} */ i_3 = this._namespaceList.length - 1; i_3 >= 0; i_3--) {\n            var /** @type {?} */ ns = this._namespaceList[i_3];\n            ns.drainQueuedTransitions(microtaskId).forEach(function (entry) {\n                var /** @type {?} */ player = entry.player;\n                allPlayers.push(player);\n                var /** @type {?} */ element = entry.element;\n                if (!bodyNode || !_this.driver.containsElement(bodyNode, element)) {\n                    player.destroy();\n                    return;\n                }\n                var /** @type {?} */ leaveClassName = /** @type {?} */ ((leaveNodeMapIds.get(element)));\n                var /** @type {?} */ enterClassName = /** @type {?} */ ((enterNodeMapIds.get(element)));\n                var /** @type {?} */ instruction = /** @type {?} */ ((_this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName)));\n                if (instruction.errors && instruction.errors.length) {\n                    erroneousTransitions.push(instruction);\n                    return;\n                }\n                // if a unmatched transition is queued to go then it SHOULD NOT render\n                // an animation and cancel the previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(function () { return eraseStyles(element, instruction.fromStyles); });\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub trigger\n                // then it will instruct the timeline builder to not add a player delay, but\n                // instead stretch the first keyframe gap up until the animation starts. The\n                // reason this is important is to prevent extra initialization styles from being\n                // required by the user in the animation.\n                instruction.timelines.forEach(function (tl) { return tl.stretchStartingKeyframe = true; });\n                subTimelines.append(element, instruction.timelines);\n                var /** @type {?} */ tuple = { instruction: instruction, player: player, element: element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach(function (element) { return getOrSetAsInMap(queriedElements, element, []).push(player); });\n                instruction.preStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    if (props.length) {\n                        var /** @type {?} */ setVal_1 = /** @type {?} */ ((allPreStyleElements.get(element)));\n                        if (!setVal_1) {\n                            allPreStyleElements.set(element, setVal_1 = new Set());\n                        }\n                        props.forEach(function (prop) { return setVal_1.add(prop); });\n                    }\n                });\n                instruction.postStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    var /** @type {?} */ setVal = /** @type {?} */ ((allPostStyleElements.get(element)));\n                    if (!setVal) {\n                        allPostStyleElements.set(element, setVal = new Set());\n                    }\n                    props.forEach(function (prop) { return setVal.add(prop); });\n                });\n            });\n        }\n        if (erroneousTransitions.length) {\n            var /** @type {?} */ errors_1 = [];\n            erroneousTransitions.forEach(function (instruction) {\n                errors_1.push(\"@\" + instruction.triggerName + \" has failed due to:\\n\"); /** @type {?} */\n                ((instruction.errors)).forEach(function (error) { return errors_1.push(\"- \" + error + \"\\n\"); });\n            });\n            allPlayers.forEach(function (player) { return player.destroy(); });\n            this.reportError(errors_1);\n        }\n        var /** @type {?} */ allPreviousPlayersMap = new Map();\n        // this map works to tell which element in the DOM tree is contained by\n        // which animation. Further down below this map will get populated once\n        // the players are built and in doing so it can efficiently figure out\n        // if a sub player is skipped due to a parent player having priority.\n        var /** @type {?} */ animationElementMap = new Map();\n        queuedInstructions.forEach(function (entry) {\n            var /** @type {?} */ element = entry.element;\n            if (subTimelines.has(element)) {\n                animationElementMap.set(element, element);\n                _this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach(function (player) {\n            var /** @type {?} */ element = player.element;\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach(function (prevPlayer) {\n                getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer);\n                prevPlayer.destroy();\n            });\n        });\n        // this is a special case for nodes that will be removed (either by)\n        // having their own leave animations or by being queried in a container\n        // that will be removed once a parent animation is complete. The idea\n        // here is that * styles must be identical to ! styles because of\n        // backwards compatibility (* is also filled in by default in many places).\n        // Otherwise * styles will return an empty value or auto since the element\n        // that is being getComputedStyle'd will not be visible (since * = destination)\n        var /** @type {?} */ replaceNodes = allLeaveNodes.filter(function (node) {\n            return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n        });\n        // POST STAGE: fill the * styles\n        var /** @type {?} */ postStylesMap = new Map();\n        var /** @type {?} */ allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n        allLeaveQueriedNodes.forEach(function (node) {\n            if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n                replaceNodes.push(node);\n            }\n        });\n        // PRE STAGE: fill the ! styles\n        var /** @type {?} */ preStylesMap = new Map();\n        enterNodeMap.forEach(function (nodes, root) {\n            cloakAndComputeStyles(preStylesMap, _this.driver, new Set(nodes), allPreStyleElements, PRE_STYLE);\n        });\n        replaceNodes.forEach(function (node) {\n            var /** @type {?} */ post = postStylesMap.get(node);\n            var /** @type {?} */ pre = preStylesMap.get(node);\n            postStylesMap.set(node, /** @type {?} */ (tslib_1.__assign({}, post, pre)));\n        });\n        var /** @type {?} */ rootPlayers = [];\n        var /** @type {?} */ subPlayers = [];\n        var /** @type {?} */ NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n        queuedInstructions.forEach(function (entry) {\n            var element = entry.element, player = entry.player, instruction = entry.instruction;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                if (disabledElementsSet.has(element)) {\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    player.disabled = true;\n                    player.overrideTotalTime(instruction.totalTime);\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this will flow up the DOM and query the map to figure out\n                // if a parent animation has priority over it. In the situation\n                // that a parent is detected then it will cancel the loop. If\n                // nothing is detected, or it takes a few hops to find a parent,\n                // then it will fill in the missing nodes and signal them as having\n                // a detected parent (or a NO_PARENT value via a special constant).\n                var /** @type {?} */ parentWithAnimation_1 = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n                if (animationElementMap.size > 1) {\n                    var /** @type {?} */ elm = element;\n                    var /** @type {?} */ parentsToAdd = [];\n                    while (elm = elm.parentNode) {\n                        var /** @type {?} */ detectedParent = animationElementMap.get(elm);\n                        if (detectedParent) {\n                            parentWithAnimation_1 = detectedParent;\n                            break;\n                        }\n                        parentsToAdd.push(elm);\n                    }\n                    parentsToAdd.forEach(function (parent) { return animationElementMap.set(parent, parentWithAnimation_1); });\n                }\n                var /** @type {?} */ innerPlayer = _this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                if (parentWithAnimation_1 === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n                    rootPlayers.push(player);\n                }\n                else {\n                    var /** @type {?} */ parentPlayers = _this.playersByElement.get(parentWithAnimation_1);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                // there still might be a ancestor player animating this\n                // element therefore we will still add it as a sub player\n                // even if its animation may be disabled\n                subPlayers.push(player);\n                if (disabledElementsSet.has(element)) {\n                    skippedPlayers.push(player);\n                }\n            }\n        });\n        // find all of the sub players' corresponding inner animation player\n        subPlayers.forEach(function (player) {\n            // even if any players are not found for a sub animation then it\n            // will still complete itself after the next tick since it's Noop\n            var /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                var /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach(function (player) {\n            if (player.parentPlayer) {\n                player.syncPlayerEvents(player.parentPlayer);\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (var /** @type {?} */ i_4 = 0; i_4 < allLeaveNodes.length; i_4++) {\n            var /** @type {?} */ element = allLeaveNodes[i_4];\n            var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n            removeClass(element, LEAVE_CLASSNAME);\n            // this means the element has a removal animation that is being\n            // taken care of and therefore the inner elements will hang around\n            // until that animation is over (or the parent queried animation)\n            if (details && details.hasAnimation)\n                continue;\n            var /** @type {?} */ players = [];\n            // if this element is queried or if it contains queried children\n            // then we want for the element not to be removed from the page\n            // until the queried animations have finished\n            if (queriedElements.size) {\n                var /** @type {?} */ queriedPlayerResults = queriedElements.get(element);\n                if (queriedPlayerResults && queriedPlayerResults.length) {\n                    players.push.apply(players, queriedPlayerResults);\n                }\n                var /** @type {?} */ queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n                for (var /** @type {?} */ j = 0; j < queriedInnerElements.length; j++) {\n                    var /** @type {?} */ queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n                    if (queriedPlayers && queriedPlayers.length) {\n                        players.push.apply(players, queriedPlayers);\n                    }\n                }\n            }\n            var /** @type {?} */ activePlayers = players.filter(function (p) { return !p.destroyed; });\n            if (activePlayers.length) {\n                removeNodesAfterAnimationDone(this, element, activePlayers);\n            }\n            else {\n                this.processLeaveNode(element);\n            }\n        }\n        // this is required so the cleanup method doesn't remove them\n        allLeaveNodes.length = 0;\n        rootPlayers.forEach(function (player) {\n            _this.players.push(player);\n            player.onDone(function () {\n                player.destroy();\n                var /** @type {?} */ index = _this.players.indexOf(player);\n                _this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        return rootPlayers;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.elementContainsData = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    function (namespaceId, element) {\n        var /** @type {?} */ containsData = false;\n        var /** @type {?} */ details = /** @type {?} */ (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval)\n            containsData = true;\n        if (this.playersByElement.has(element))\n            containsData = true;\n        if (this.playersByQueriedElement.has(element))\n            containsData = true;\n        if (this.statesByElement.has(element))\n            containsData = true;\n        return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlush = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._flushFns.push(callback); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlushAnimationsDone = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._whenQuietFns.push(callback); };\n    /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._getPreviousPlayers = /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    function (element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        var /** @type {?} */ players = [];\n        if (isQueriedElement) {\n            var /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            var /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                var /** @type {?} */ isRemovalAnimation_1 = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach(function (player) {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation_1 && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter(function (player) {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._beforeAnimationBuild = /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    function (namespaceId, instruction, allPreviousPlayersMap) {\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        var /** @type {?} */ targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n        var /** @type {?} */ targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n        var _loop_1 = function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n            var /** @type {?} */ previousPlayers = this_1._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ realPlayer = /** @type {?} */ (player.getRealPlayer());\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                player.destroy();\n                players.push(player);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = instruction.timelines; _i < _a.length; _i++) {\n            var timelineInstruction = _a[_i];\n            _loop_1(timelineInstruction);\n        }\n        // this needs to be done so that the PRE/POST styles can be\n        // computed properly without interfering with the previous animation\n        eraseStyles(rootElement, instruction.fromStyles);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildAnimation = /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    function (namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        var _this = this;\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        var /** @type {?} */ allQueriedPlayers = [];\n        var /** @type {?} */ allConsumedElements = new Set();\n        var /** @type {?} */ allSubElements = new Set();\n        var /** @type {?} */ allNewPlayers = instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            allConsumedElements.add(element);\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            var /** @type {?} */ details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new NoopAnimationPlayer(timelineInstruction.duration, timelineInstruction.delay);\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY)\n                .map(function (p) { return p.getRealPlayer(); }))\n                .filter(function (p) {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                var /** @type {?} */ pp = /** @type {?} */ (p);\n                return pp.element ? pp.element === element : false;\n            });\n            var /** @type {?} */ preStyles = preStylesMap.get(element);\n            var /** @type {?} */ postStyles = postStylesMap.get(element);\n            var /** @type {?} */ keyframes = normalizeKeyframes(_this.driver, _this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n            var /** @type {?} */ player = _this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                var /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach(function (player) {\n            getOrSetAsInMap(_this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(function () { return deleteOrUnsetInMap(_this.playersByQueriedElement, player.element, player); });\n        });\n        allConsumedElements.forEach(function (element) { return addClass(element, NG_ANIMATING_CLASSNAME); });\n        var /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(function () {\n            allConsumedElements.forEach(function (element) { return removeClass(element, NG_ANIMATING_CLASSNAME); });\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach(function (element) { getOrSetAsInMap(skippedPlayersMap, element, []).push(player); });\n        return player;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildPlayer = /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    function (instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new NoopAnimationPlayer(instruction.duration, instruction.delay);\n    };\n    return TransitionAnimationEngine;\n}());\nexport { TransitionAnimationEngine };\nfunction TransitionAnimationEngine_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.players;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.newHostElements;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.playersByElement;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.playersByQueriedElement;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.statesByElement;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.disabledNodes;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.totalAnimations;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.totalQueuedPlayers;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype._namespaceLookup;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype._namespaceList;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype._flushFns;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype._whenQuietFns;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.namespacesByHostElement;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.collectedEnterElements;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.collectedLeaveElements;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.onRemovalComplete;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype.driver;\n    /** @type {?} */\n    TransitionAnimationEngine.prototype._normalizer;\n}\nvar TransitionAnimationPlayer = /** @class */ (function () {\n    function TransitionAnimationPlayer(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n        this._player = new NoopAnimationPlayer();\n        this._containsRealPlayer = false;\n        this._queuedCallbacks = {};\n        this.destroyed = false;\n        this.markedForDestroy = false;\n        this.disabled = false;\n        this.queued = true;\n        this.totalTime = 0;\n    }\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setRealPlayer = /**\n     * @param {?} player\n     * @return {?}\n     */\n    function (player) {\n        var _this = this;\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        Object.keys(this._queuedCallbacks).forEach(function (phase) {\n            _this._queuedCallbacks[phase].forEach(function (callback) { return listenOnPlayer(player, phase, undefined, callback); });\n        });\n        this._queuedCallbacks = {};\n        this._containsRealPlayer = true;\n        this.overrideTotalTime(player.totalTime);\n        (/** @type {?} */ (this)).queued = false;\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getRealPlayer = /**\n     * @return {?}\n     */\n    function () { return this._player; };\n    /**\n     * @param {?} totalTime\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.overrideTotalTime = /**\n     * @param {?} totalTime\n     * @return {?}\n     */\n    function (totalTime) { (/** @type {?} */ (this)).totalTime = totalTime; };\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.syncPlayerEvents = /**\n     * @param {?} player\n     * @return {?}\n     */\n    function (player) {\n        var _this = this;\n        var /** @type {?} */ p = /** @type {?} */ (this._player);\n        if (p.triggerCallback) {\n            player.onStart(function () { return ((p.triggerCallback))('start'); });\n        }\n        player.onDone(function () { return _this.finish(); });\n        player.onDestroy(function () { return _this.destroy(); });\n    };\n    /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype._queueEvent = /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (name, callback) {\n        getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () { this._player.init(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this.queued ? false : this._player.hasStarted(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.play(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.pause(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.restart(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () { this._player.finish(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).destroyed = true;\n        this._player.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () { !this.queued && this._player.reset(); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this.queued ? 0 : this._player.getPosition(); };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ p = /** @type {?} */ (this._player);\n        if (p.triggerCallback) {\n            p.triggerCallback(phaseName);\n        }\n    };\n    return TransitionAnimationPlayer;\n}());\nexport { TransitionAnimationPlayer };\nfunction TransitionAnimationPlayer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype._player;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype._containsRealPlayer;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype._queuedCallbacks;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.destroyed;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.parentPlayer;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.markedForDestroy;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.disabled;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.queued;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.totalTime;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.namespaceId;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.triggerName;\n    /** @type {?} */\n    TransitionAnimationPlayer.prototype.element;\n}\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map, key, value) {\n    var /** @type {?} */ currentValues;\n    if (map instanceof Map) {\n        currentValues = map.get(key);\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                map.delete(key);\n            }\n        }\n    }\n    else {\n        currentValues = map[key];\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                delete map[key];\n            }\n        }\n    }\n    return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value) {\n    // we use `!= null` here because it's the most simple\n    // way to test against a \"falsy\" value without mixing\n    // in empty strings or a zero value. DO NOT OPTIMIZE.\n    return value != null ? value : null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element, value) {\n    var /** @type {?} */ oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\n/**\n * @param {?} valuesMap\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {\n    var /** @type {?} */ cloakVals = [];\n    elements.forEach(function (element) { return cloakVals.push(cloakElement(element)); });\n    var /** @type {?} */ failedElements = [];\n    elementPropsMap.forEach(function (props, element) {\n        var /** @type {?} */ styles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n                failedElements.push(element);\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    // we use a index variable here since Set.forEach(a, i) does not return\n    // an index value for the closure (but instead just the value)\n    var /** @type {?} */ i = 0;\n    elements.forEach(function (element) { return cloakElement(element, cloakVals[i++]); });\n    return failedElements;\n}\n/**\n * @param {?} roots\n * @param {?} nodes\n * @return {?}\n */\nfunction buildRootMap(roots, nodes) {\n    var /** @type {?} */ rootMap = new Map();\n    roots.forEach(function (root) { return rootMap.set(root, []); });\n    if (nodes.length == 0)\n        return rootMap;\n    var /** @type {?} */ NULL_NODE = 1;\n    var /** @type {?} */ nodeSet = new Set(nodes);\n    var /** @type {?} */ localRootMap = new Map();\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    function getRoot(node) {\n        if (!node)\n            return NULL_NODE;\n        var /** @type {?} */ root = localRootMap.get(node);\n        if (root)\n            return root;\n        var /** @type {?} */ parent = node.parentNode;\n        if (rootMap.has(parent)) {\n            // ngIf inside @trigger\n            root = parent;\n        }\n        else if (nodeSet.has(parent)) {\n            // ngIf inside ngIf\n            root = NULL_NODE;\n        }\n        else {\n            // recurse upwards\n            root = getRoot(parent);\n        }\n        localRootMap.set(node, root);\n        return root;\n    }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ root = getRoot(node);\n        if (root !== NULL_NODE) {\n            /** @type {?} */ ((rootMap.get(root))).push(node);\n        }\n    });\n    return rootMap;\n}\nvar /** @type {?} */ CLASSES_CACHE_KEY = '$$classes';\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction containsClass(element, className) {\n    if (element.classList) {\n        return element.classList.contains(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        return classes && classes[className];\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (!classes) {\n            classes = element[CLASSES_CACHE_KEY] = {};\n        }\n        classes[className] = true;\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (classes) {\n            delete classes[className];\n        }\n    }\n}\n/**\n * @param {?} engine\n * @param {?} element\n * @param {?} players\n * @return {?}\n */\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(function () { return engine.processLeaveNode(element); });\n}\n/**\n * @param {?} players\n * @return {?}\n */\nfunction flattenGroupPlayers(players) {\n    var /** @type {?} */ finalPlayers = [];\n    _flattenGroupPlayersRecur(players, finalPlayers);\n    return finalPlayers;\n}\n/**\n * @param {?} players\n * @param {?} finalPlayers\n * @return {?}\n */\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n    for (var /** @type {?} */ i = 0; i < players.length; i++) {\n        var /** @type {?} */ player = players[i];\n        if (player instanceof AnimationGroupPlayer) {\n            _flattenGroupPlayersRecur(player.players, finalPlayers);\n        }\n        else {\n            finalPlayers.push(/** @type {?} */ (player));\n        }\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction objEquals(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        var /** @type {?} */ prop = k1[i];\n        if (!b.hasOwnProperty(prop) || a[prop] !== b[prop])\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} element\n * @param {?} allPreStyleElements\n * @param {?} allPostStyleElements\n * @return {?}\n */\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n    var /** @type {?} */ postEntry = allPostStyleElements.get(element);\n    if (!postEntry)\n        return false;\n    var /** @type {?} */ preEntry = allPreStyleElements.get(element);\n    if (preEntry) {\n        postEntry.forEach(function (data) { return ((preEntry)).add(data); });\n    }\n    else {\n        allPreStyleElements.set(element, postEntry);\n    }\n    allPostStyleElements.delete(element);\n    return true;\n}\n//# sourceMappingURL=transition_animation_engine.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { buildAnimationAst } from '../dsl/animation_ast_builder';\nimport { buildTrigger } from '../dsl/animation_trigger';\nimport { parseTimelineCommand } from './shared';\nimport { TimelineAnimationEngine } from './timeline_animation_engine';\nimport { TransitionAnimationEngine } from './transition_animation_engine';\nvar AnimationEngine = /** @class */ (function () {\n    function AnimationEngine(_driver, normalizer) {\n        var _this = this;\n        this._driver = _driver;\n        this._triggerCache = {};\n        this.onRemovalComplete = function (element, context) { };\n        this._transitionEngine = new TransitionAnimationEngine(_driver, normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(_driver, normalizer);\n        this._transitionEngine.onRemovalComplete = function (element, context) {\n            return _this.onRemovalComplete(element, context);\n        };\n    }\n    /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    AnimationEngine.prototype.registerTrigger = /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (componentId, namespaceId, hostElement, name, metadata) {\n        var /** @type {?} */ cacheKey = componentId + '-' + name;\n        var /** @type {?} */ trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            var /** @type {?} */ errors = [];\n            var /** @type {?} */ ast = /** @type {?} */ (buildAnimationAst(this._driver, /** @type {?} */ (metadata), errors));\n            if (errors.length) {\n                throw new Error(\"The animation trigger \\\"\" + name + \"\\\" has failed to build due to the following errors:\\n - \" + errors.join(\"\\n - \"));\n            }\n            trigger = buildTrigger(name, ast);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    AnimationEngine.prototype.register = /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.destroy = /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    AnimationEngine.prototype.onInsert = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    function (namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.onRemove = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (namespaceId, element, context) {\n        this._transitionEngine.removeNode(namespaceId, element, context);\n    };\n    /**\n     * @param {?} element\n     * @param {?} disable\n     * @return {?}\n     */\n    AnimationEngine.prototype.disableAnimations = /**\n     * @param {?} element\n     * @param {?} disable\n     * @return {?}\n     */\n    function (element, disable) {\n        this._transitionEngine.markElementAsDisabled(element, disable);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationEngine.prototype.process = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (namespaceId, element, property, value) {\n        if (property.charAt(0) == '@') {\n            var _a = parseTimelineCommand(property), id = _a[0], action = _a[1];\n            var /** @type {?} */ args = /** @type {?} */ (value);\n            this._timelineEngine.command(id, element, action, args);\n        }\n        else {\n            this._transitionEngine.trigger(namespaceId, element, property, value);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationEngine.prototype.listen = /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    function (namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            var _a = parseTimelineCommand(eventName), id = _a[0], action = _a[1];\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    AnimationEngine.prototype.flush = /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    function (microtaskId) {\n        if (microtaskId === void 0) { microtaskId = -1; }\n        this._transitionEngine.flush(microtaskId);\n    };\n    Object.defineProperty(AnimationEngine.prototype, \"players\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (/** @type {?} */ (this._transitionEngine.players))\n                .concat(/** @type {?} */ (this._timelineEngine.players));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AnimationEngine.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () { return this._transitionEngine.whenRenderingDone(); };\n    return AnimationEngine;\n}());\nexport { AnimationEngine };\nfunction AnimationEngine_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationEngine.prototype._transitionEngine;\n    /** @type {?} */\n    AnimationEngine.prototype._timelineEngine;\n    /** @type {?} */\n    AnimationEngine.prototype._triggerCache;\n    /** @type {?} */\n    AnimationEngine.prototype.onRemovalComplete;\n    /** @type {?} */\n    AnimationEngine.prototype._driver;\n}\n//# sourceMappingURL=animation_engine_next.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar /** @type {?} */ ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\nvar /** @type {?} */ ANIMATION_PROP = 'animation';\nvar /** @type {?} */ ANIMATIONEND_EVENT = 'animationend';\nvar /** @type {?} */ ONE_SECOND = 1000;\nvar ElementAnimationStyleHandler = /** @class */ (function () {\n    function ElementAnimationStyleHandler(_element, _name, _duration, _delay, _easing, _fillMode, _onDoneFn) {\n        var _this = this;\n        this._element = _element;\n        this._name = _name;\n        this._duration = _duration;\n        this._delay = _delay;\n        this._easing = _easing;\n        this._fillMode = _fillMode;\n        this._onDoneFn = _onDoneFn;\n        this._finished = false;\n        this._destroyed = false;\n        this._startTime = 0;\n        this._position = 0;\n        this._eventFn = function (e) { return _this._handleCallback(e); };\n    }\n    /**\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype.apply = /**\n     * @return {?}\n     */\n    function () {\n        applyKeyframeAnimation(this._element, this._duration + \"ms \" + this._easing + \" \" + this._delay + \"ms 1 normal \" + this._fillMode + \" \" + this._name);\n        addRemoveAnimationEvent(this._element, this._eventFn, false);\n        this._startTime = Date.now();\n    };\n    /**\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype.pause = /**\n     * @return {?}\n     */\n    function () { playPauseAnimation(this._element, this._name, 'paused'); };\n    /**\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype.resume = /**\n     * @return {?}\n     */\n    function () { playPauseAnimation(this._element, this._name, 'running'); };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype.setPosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        var /** @type {?} */ index = findIndexForAnimation(this._element, this._name);\n        this._position = position * this._duration;\n        setAnimationStyle(this._element, 'Delay', \"-\" + this._position + \"ms\", index);\n    };\n    /**\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this._position; };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype._handleCallback = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ timestamp = event._ngTestManualTimestamp || Date.now();\n        var /** @type {?} */ elapsedTime = parseFloat(event.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES)) * ONE_SECOND;\n        if (event.animationName == this._name &&\n            Math.max(timestamp - this._startTime, 0) >= this._delay && elapsedTime >= this._duration) {\n            this.finish();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype.finish = /**\n     * @return {?}\n     */\n    function () {\n        if (this._finished)\n            return;\n        this._finished = true;\n        this._onDoneFn();\n        addRemoveAnimationEvent(this._element, this._eventFn, true);\n    };\n    /**\n     * @return {?}\n     */\n    ElementAnimationStyleHandler.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed)\n            return;\n        this._destroyed = true;\n        this.finish();\n        removeKeyframeAnimation(this._element, this._name);\n    };\n    return ElementAnimationStyleHandler;\n}());\nexport { ElementAnimationStyleHandler };\nfunction ElementAnimationStyleHandler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._eventFn;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._finished;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._destroyed;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._startTime;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._position;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._element;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._name;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._duration;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._delay;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._easing;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._fillMode;\n    /** @type {?} */\n    ElementAnimationStyleHandler.prototype._onDoneFn;\n}\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} status\n * @return {?}\n */\nfunction playPauseAnimation(element, name, status) {\n    var /** @type {?} */ index = findIndexForAnimation(element, name);\n    setAnimationStyle(element, 'PlayState', status, index);\n}\n/**\n * @param {?} element\n * @param {?} value\n * @return {?}\n */\nfunction applyKeyframeAnimation(element, value) {\n    var /** @type {?} */ anim = getAnimationStyle(element, '').trim();\n    var /** @type {?} */ index = 0;\n    if (anim.length) {\n        index = countChars(anim, ',') + 1;\n        value = anim + \", \" + value;\n    }\n    setAnimationStyle(element, '', value);\n    return index;\n}\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nfunction removeKeyframeAnimation(element, name) {\n    var /** @type {?} */ anim = getAnimationStyle(element, '');\n    var /** @type {?} */ tokens = anim.split(',');\n    var /** @type {?} */ index = findMatchingTokenIndex(tokens, name);\n    if (index >= 0) {\n        tokens.splice(index, 1);\n        var /** @type {?} */ newValue = tokens.join(',');\n        setAnimationStyle(element, '', newValue);\n    }\n}\n/**\n * @param {?} element\n * @param {?} value\n * @return {?}\n */\nfunction findIndexForAnimation(element, value) {\n    var /** @type {?} */ anim = getAnimationStyle(element, '');\n    if (anim.indexOf(',') > 0) {\n        var /** @type {?} */ tokens = anim.split(',');\n        return findMatchingTokenIndex(tokens, value);\n    }\n    return findMatchingTokenIndex([anim], value);\n}\n/**\n * @param {?} tokens\n * @param {?} searchToken\n * @return {?}\n */\nfunction findMatchingTokenIndex(tokens, searchToken) {\n    for (var /** @type {?} */ i = 0; i < tokens.length; i++) {\n        if (tokens[i].indexOf(searchToken) >= 0) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * @param {?} element\n * @param {?} fn\n * @param {?} doRemove\n * @return {?}\n */\nfunction addRemoveAnimationEvent(element, fn, doRemove) {\n    doRemove ? element.removeEventListener(ANIMATIONEND_EVENT, fn) :\n        element.addEventListener(ANIMATIONEND_EVENT, fn);\n}\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @param {?=} index\n * @return {?}\n */\nfunction setAnimationStyle(element, name, value, index) {\n    var /** @type {?} */ prop = ANIMATION_PROP + name;\n    if (index != null) {\n        var /** @type {?} */ oldValue = element.style[prop];\n        if (oldValue.length) {\n            var /** @type {?} */ tokens = oldValue.split(',');\n            tokens[index] = value;\n            value = tokens.join(',');\n        }\n    }\n    element.style[prop] = value;\n}\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nfunction getAnimationStyle(element, name) {\n    return element.style[ANIMATION_PROP + name];\n}\n/**\n * @param {?} value\n * @param {?} char\n * @return {?}\n */\nfunction countChars(value, char) {\n    var /** @type {?} */ count = 0;\n    for (var /** @type {?} */ i = 0; i < value.length; i++) {\n        var /** @type {?} */ c = value.charAt(i);\n        if (c === char)\n            count++;\n    }\n    return count;\n}\n//# sourceMappingURL=element_animation_style_handler.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { computeStyle } from '../../util';\nimport { ElementAnimationStyleHandler } from './element_animation_style_handler';\nvar /** @type {?} */ DEFAULT_FILL_MODE = 'forwards';\nvar /** @type {?} */ DEFAULT_EASING = 'linear';\nvar /** @type {?} */ ANIMATION_END_EVENT = 'animationend';\n/** @enum {number} */\nvar AnimatorControlState = {\n    INITIALIZED: 1,\n    STARTED: 2,\n    FINISHED: 3,\n    DESTROYED: 4,\n};\nexport { AnimatorControlState };\nAnimatorControlState[AnimatorControlState.INITIALIZED] = \"INITIALIZED\";\nAnimatorControlState[AnimatorControlState.STARTED] = \"STARTED\";\nAnimatorControlState[AnimatorControlState.FINISHED] = \"FINISHED\";\nAnimatorControlState[AnimatorControlState.DESTROYED] = \"DESTROYED\";\nvar CssKeyframesPlayer = /** @class */ (function () {\n    function CssKeyframesPlayer(element, keyframes, animationName, _duration, _delay, easing, _finalStyles) {\n        this.element = element;\n        this.keyframes = keyframes;\n        this.animationName = animationName;\n        this._duration = _duration;\n        this._delay = _delay;\n        this._finalStyles = _finalStyles;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this.currentSnapshot = {};\n        this.state = 0;\n        this.easing = easing || DEFAULT_EASING;\n        this.totalTime = _duration + _delay;\n        this._buildStyler();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        if (this.state >= AnimatorControlState.DESTROYED)\n            return;\n        this.state = AnimatorControlState.DESTROYED;\n        this._styler.destroy();\n        this._flushStartFns();\n        this._flushDoneFns();\n        this._onDestroyFns.forEach(function (fn) { return fn(); });\n        this._onDestroyFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype._flushDoneFns = /**\n     * @return {?}\n     */\n    function () {\n        this._onDoneFns.forEach(function (fn) { return fn(); });\n        this._onDoneFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype._flushStartFns = /**\n     * @return {?}\n     */\n    function () {\n        this._onStartFns.forEach(function (fn) { return fn(); });\n        this._onStartFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        if (this.state >= AnimatorControlState.FINISHED)\n            return;\n        this.state = AnimatorControlState.FINISHED;\n        this._styler.finish();\n        this._flushStartFns();\n        this._flushDoneFns();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.setPosition = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { this._styler.setPosition(value); };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this._styler.getPosition(); };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this.state >= AnimatorControlState.STARTED; };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        if (this.state >= AnimatorControlState.INITIALIZED)\n            return;\n        this.state = AnimatorControlState.INITIALIZED;\n        var /** @type {?} */ elm = this.element;\n        this._styler.apply();\n        if (this._delay) {\n            this._styler.pause();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        if (!this.hasStarted()) {\n            this._flushStartFns();\n            this.state = AnimatorControlState.STARTED;\n        }\n        this._styler.resume();\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        this._styler.pause();\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () {\n        this.reset();\n        this.play();\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () {\n        this._styler.destroy();\n        this._buildStyler();\n        this._styler.apply();\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype._buildStyler = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._styler = new ElementAnimationStyleHandler(this.element, this.animationName, this._duration, this._delay, this.easing, DEFAULT_FILL_MODE, function () { return _this.finish(); });\n    };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesPlayer.prototype.beforeDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.init();\n        var /** @type {?} */ styles = {};\n        if (this.hasStarted()) {\n            var /** @type {?} */ finished_1 = this.state >= AnimatorControlState.FINISHED;\n            Object.keys(this._finalStyles).forEach(function (prop) {\n                if (prop != 'offset') {\n                    styles[prop] = finished_1 ? _this._finalStyles[prop] : computeStyle(_this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    };\n    return CssKeyframesPlayer;\n}());\nexport { CssKeyframesPlayer };\nfunction CssKeyframesPlayer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._onDoneFns;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._onStartFns;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._onDestroyFns;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._started;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._styler;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.parentPlayer;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.totalTime;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.easing;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.currentSnapshot;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.state;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.element;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.keyframes;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype.animationName;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._duration;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._delay;\n    /** @type {?} */\n    CssKeyframesPlayer.prototype._finalStyles;\n}\n//# sourceMappingURL=css_keyframes_player.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as tslib_1 from \"tslib\";\nimport { NoopAnimationPlayer } from '@angular/animations';\nvar DirectStylePlayer = /** @class */ (function (_super) {\n    tslib_1.__extends(DirectStylePlayer, _super);\n    function DirectStylePlayer(element, _styles) {\n        var _this = _super.call(this) || this;\n        _this.element = element;\n        _this._styles = _styles;\n        _this._startingStyles = {};\n        _this.__initialized = false;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    DirectStylePlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.__initialized || !this._startingStyles)\n            return;\n        this.__initialized = true;\n        Object.keys(this._styles).forEach(function (prop) {\n            /** @type {?} */ ((_this._startingStyles))[prop] = _this.element.style[prop];\n        });\n        _super.prototype.init.call(this);\n    };\n    /**\n     * @return {?}\n     */\n    DirectStylePlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._startingStyles)\n            return;\n        this.init();\n        Object.keys(this._styles).forEach(function (prop) { _this.element.style[prop] = _this._styles[prop]; });\n        _super.prototype.play.call(this);\n    };\n    /**\n     * @return {?}\n     */\n    DirectStylePlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._startingStyles)\n            return;\n        Object.keys(this._startingStyles).forEach(function (prop) {\n            var /** @type {?} */ value = /** @type {?} */ ((_this._startingStyles))[prop];\n            if (value) {\n                _this.element.style[prop] = value;\n            }\n            else {\n                _this.element.style.removeProperty(prop);\n            }\n        });\n        this._startingStyles = null;\n        _super.prototype.destroy.call(this);\n    };\n    return DirectStylePlayer;\n}(NoopAnimationPlayer));\nexport { DirectStylePlayer };\nfunction DirectStylePlayer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DirectStylePlayer.prototype._startingStyles;\n    /** @type {?} */\n    DirectStylePlayer.prototype.__initialized;\n    /** @type {?} */\n    DirectStylePlayer.prototype.element;\n    /** @type {?} */\n    DirectStylePlayer.prototype._styles;\n}\n//# sourceMappingURL=direct_style_player.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { allowPreviousPlayerStylesMerge, balancePreviousStylesIntoKeyframes } from '../../util';\nimport { containsElement, invokeQuery, matchesElement, validateStyleProperty } from '../shared';\nimport { CssKeyframesPlayer } from './css_keyframes_player';\nimport { DirectStylePlayer } from './direct_style_player';\nvar /** @type {?} */ KEYFRAMES_NAME_PREFIX = 'gen_css_kf_';\nvar /** @type {?} */ TAB_SPACE = ' ';\nvar CssKeyframesDriver = /** @class */ (function () {\n    function CssKeyframesDriver() {\n        this._count = 0;\n        this._head = document.querySelector('head');\n        this._warningIssued = false;\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype.validateStyleProperty = /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return validateStyleProperty(prop); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype.matchesElement = /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype.containsElement = /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype.query = /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype.computeStyle = /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (element, prop, defaultValue) {\n        return /** @type {?} */ ((/** @type {?} */ (window.getComputedStyle(element)))[prop]);\n    };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} keyframes\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype.buildKeyframeElement = /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} keyframes\n     * @return {?}\n     */\n    function (element, name, keyframes) {\n        keyframes = keyframes.map(function (kf) { return hypenatePropsObject(kf); });\n        var /** @type {?} */ keyframeStr = \"@keyframes \" + name + \" {\\n\";\n        var /** @type {?} */ tab = '';\n        keyframes.forEach(function (kf) {\n            tab = TAB_SPACE;\n            var /** @type {?} */ offset = parseFloat(kf[\"offset\"]);\n            keyframeStr += \"\" + tab + offset * 100 + \"% {\\n\";\n            tab += TAB_SPACE;\n            Object.keys(kf).forEach(function (prop) {\n                var /** @type {?} */ value = kf[prop];\n                switch (prop) {\n                    case 'offset':\n                        return;\n                    case 'easing':\n                        if (value) {\n                            keyframeStr += tab + \"animation-timing-function: \" + value + \";\\n\";\n                        }\n                        return;\n                    default:\n                        keyframeStr += \"\" + tab + prop + \": \" + value + \";\\n\";\n                        return;\n                }\n            });\n            keyframeStr += tab + \"}\\n\";\n        });\n        keyframeStr += \"}\\n\";\n        var /** @type {?} */ kfElm = document.createElement('style');\n        kfElm.innerHTML = keyframeStr;\n        return kfElm;\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @param {?=} scrubberAccessRequested\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype.animate = /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @param {?=} scrubberAccessRequested\n     * @return {?}\n     */\n    function (element, keyframes, duration, delay, easing, previousPlayers, scrubberAccessRequested) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        if (scrubberAccessRequested) {\n            this._notifyFaultyScrubber();\n        }\n        var /** @type {?} */ previousCssKeyframePlayers = /** @type {?} */ (previousPlayers.filter(function (player) { return player instanceof CssKeyframesPlayer; }));\n        var /** @type {?} */ previousStyles = {};\n        if (allowPreviousPlayerStylesMerge(duration, delay)) {\n            previousCssKeyframePlayers.forEach(function (player) {\n                var /** @type {?} */ styles = player.currentSnapshot;\n                Object.keys(styles).forEach(function (prop) { return previousStyles[prop] = styles[prop]; });\n            });\n        }\n        keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n        var /** @type {?} */ finalStyles = flattenKeyframesIntoStyles(keyframes);\n        // if there is no animation then there is no point in applying\n        // styles and waiting for an event to get fired. This causes lag.\n        // It's better to just directly apply the styles to the element\n        // via the direct styling animation player.\n        if (duration == 0) {\n            return new DirectStylePlayer(element, finalStyles);\n        }\n        var /** @type {?} */ animationName = \"\" + KEYFRAMES_NAME_PREFIX + this._count++;\n        var /** @type {?} */ kfElm = this.buildKeyframeElement(element, animationName, keyframes); /** @type {?} */\n        ((document.querySelector('head'))).appendChild(kfElm);\n        var /** @type {?} */ player = new CssKeyframesPlayer(element, keyframes, animationName, duration, delay, easing, finalStyles);\n        player.onDestroy(function () { return removeElement(kfElm); });\n        return player;\n    };\n    /**\n     * @return {?}\n     */\n    CssKeyframesDriver.prototype._notifyFaultyScrubber = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._warningIssued) {\n            console.warn('@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\\n', '  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill.');\n            this._warningIssued = true;\n        }\n    };\n    return CssKeyframesDriver;\n}());\nexport { CssKeyframesDriver };\nfunction CssKeyframesDriver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CssKeyframesDriver.prototype._count;\n    /** @type {?} */\n    CssKeyframesDriver.prototype._head;\n    /** @type {?} */\n    CssKeyframesDriver.prototype._warningIssued;\n}\n/**\n * @param {?} keyframes\n * @return {?}\n */\nfunction flattenKeyframesIntoStyles(keyframes) {\n    var /** @type {?} */ flatKeyframes = {};\n    if (keyframes) {\n        var /** @type {?} */ kfs = Array.isArray(keyframes) ? keyframes : [keyframes];\n        kfs.forEach(function (kf) {\n            Object.keys(kf).forEach(function (prop) {\n                if (prop == 'offset' || prop == 'easing')\n                    return;\n                flatKeyframes[prop] = kf[prop];\n            });\n        });\n    }\n    return flatKeyframes;\n}\n/**\n * @param {?} object\n * @return {?}\n */\nfunction hypenatePropsObject(object) {\n    var /** @type {?} */ newObj = {};\n    Object.keys(object).forEach(function (prop) {\n        var /** @type {?} */ newProp = prop.replace(/([a-z])([A-Z])/g, '$1-$2');\n        newObj[newProp] = object[prop];\n    });\n    return newObj;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeElement(node) {\n    node.parentNode.removeChild(node);\n}\n//# sourceMappingURL=css_keyframes_driver.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { computeStyle } from '../../util';\nvar WebAnimationsPlayer = /** @class */ (function () {\n    function WebAnimationsPlayer(element, keyframes, options) {\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._initialized = false;\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this.time = 0;\n        this.parentPlayer = null;\n        this.currentSnapshot = {};\n        this._duration = /** @type {?} */ (options['duration']);\n        this._delay = /** @type {?} */ (options['delay']) || 0;\n        this.time = this._duration + this._delay;\n    }\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._onFinish = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._buildPlayer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        var /** @type {?} */ keyframes = this.keyframes;\n        (/** @type {?} */ (this)).domPlayer =\n            this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n        this.domPlayer.addEventListener('finish', function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._preparePlayerBeforeStart = /**\n     * @return {?}\n     */\n    function () {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this.domPlayer.pause();\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._triggerWebAnimation = /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    function (element, keyframes, options) {\n        // jscompiler doesn't seem to know animate is a native property because it's not fully\n        // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n        return /** @type {?} */ (element['animate'](keyframes, options));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onStart = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDone = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDestroy = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.play = /**\n     * @return {?}\n     */\n    function () {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n        this.domPlayer.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.pause = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        this.domPlayer.pause();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.finish = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n        this._onFinish();\n        this.domPlayer.finish();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.reset = /**\n     * @return {?}\n     */\n    function () {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._resetDomPlayerState = /**\n     * @return {?}\n     */\n    function () {\n        if (this.domPlayer) {\n            this.domPlayer.cancel();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.restart = /**\n     * @return {?}\n     */\n    function () {\n        this.reset();\n        this.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.hasStarted = /**\n     * @return {?}\n     */\n    function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._resetDomPlayerState();\n            this._onFinish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.setPosition = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { this.domPlayer.currentTime = p * this.time; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.getPosition = /**\n     * @return {?}\n     */\n    function () { return this.domPlayer.currentTime / this.time; };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._delay + this._duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.beforeDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ styles = {};\n        if (this.hasStarted()) {\n            Object.keys(this._finalKeyframe).forEach(function (prop) {\n                if (prop != 'offset') {\n                    styles[prop] =\n                        _this._finished ? _this._finalKeyframe[prop] : computeStyle(_this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    };\n    /* @internal */\n    /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.triggerCallback = /**\n     * @param {?} phaseName\n     * @return {?}\n     */\n    function (phaseName) {\n        var /** @type {?} */ methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(function (fn) { return fn(); });\n        methods.length = 0;\n    };\n    return WebAnimationsPlayer;\n}());\nexport { WebAnimationsPlayer };\nfunction WebAnimationsPlayer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._onDoneFns;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._onStartFns;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._onDestroyFns;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._duration;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._delay;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._initialized;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._finished;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._started;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._destroyed;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype._finalKeyframe;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype.domPlayer;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype.time;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype.parentPlayer;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype.currentSnapshot;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype.element;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype.keyframes;\n    /** @type {?} */\n    WebAnimationsPlayer.prototype.options;\n}\n//# sourceMappingURL=web_animations_player.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { allowPreviousPlayerStylesMerge, balancePreviousStylesIntoKeyframes, copyStyles } from '../../util';\nimport { CssKeyframesDriver } from '../css_keyframes/css_keyframes_driver';\nimport { containsElement, invokeQuery, matchesElement, validateStyleProperty } from '../shared';\nimport { WebAnimationsPlayer } from './web_animations_player';\nvar WebAnimationsDriver = /** @class */ (function () {\n    function WebAnimationsDriver() {\n        this._isNativeImpl = /\\{\\s*\\[native\\s+code\\]\\s*\\}/.test(getElementAnimateFn().toString());\n        this._cssKeyframesDriver = new CssKeyframesDriver();\n    }\n    /**\n     * @param {?} prop\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.validateStyleProperty = /**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return validateStyleProperty(prop); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.matchesElement = /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.containsElement = /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.query = /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.computeStyle = /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (element, prop, defaultValue) {\n        return /** @type {?} */ ((/** @type {?} */ (window.getComputedStyle(element)))[prop]);\n    };\n    /**\n     * @param {?} supported\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.overrideWebAnimationsSupport = /**\n     * @param {?} supported\n     * @return {?}\n     */\n    function (supported) { this._isNativeImpl = supported; };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @param {?=} scrubberAccessRequested\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.animate = /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @param {?=} scrubberAccessRequested\n     * @return {?}\n     */\n    function (element, keyframes, duration, delay, easing, previousPlayers, scrubberAccessRequested) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var /** @type {?} */ useKeyframes = !scrubberAccessRequested && !this._isNativeImpl;\n        if (useKeyframes) {\n            return this._cssKeyframesDriver.animate(element, keyframes, duration, delay, easing, previousPlayers);\n        }\n        var /** @type {?} */ fill = delay == 0 ? 'both' : 'forwards';\n        var /** @type {?} */ playerOptions = { duration: duration, delay: delay, fill: fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        var /** @type {?} */ previousStyles = {};\n        var /** @type {?} */ previousWebAnimationPlayers = /** @type {?} */ (previousPlayers.filter(function (player) { return player instanceof WebAnimationsPlayer; }));\n        if (allowPreviousPlayerStylesMerge(duration, delay)) {\n            previousWebAnimationPlayers.forEach(function (player) {\n                var /** @type {?} */ styles = player.currentSnapshot;\n                Object.keys(styles).forEach(function (prop) { return previousStyles[prop] = styles[prop]; });\n            });\n        }\n        keyframes = keyframes.map(function (styles) { return copyStyles(styles, false); });\n        keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n        return new WebAnimationsPlayer(element, keyframes, playerOptions);\n    };\n    return WebAnimationsDriver;\n}());\nexport { WebAnimationsDriver };\nfunction WebAnimationsDriver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    WebAnimationsDriver.prototype._isNativeImpl;\n    /** @type {?} */\n    WebAnimationsDriver.prototype._cssKeyframesDriver;\n}\n/**\n * @return {?}\n */\nexport function supportsWebAnimations() {\n    return typeof getElementAnimateFn() === 'function';\n}\n/**\n * @return {?}\n */\nfunction getElementAnimateFn() {\n    return (typeof Element !== 'undefined' && (/** @type {?} */ (Element)).prototype['animate']) || {};\n}\n//# sourceMappingURL=web_animations_driver.js.map"]}